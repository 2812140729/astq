{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-adapter.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-query.js","src/astq-cache.js","src/astq-util.js","src/astq.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","module","exports","ASTQAdapterMozAST","loc","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","ASTQAdapter","_adapters","register","adapter","select","i","length","stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","require","ASTQFuncs","_funcs","name","func","run","args","apply","util","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","_this2","execStep","axis","match","filter","id","matchAndTake","_this3","take","execFilter","op","walk","leftSibling","_i","_i2","_i3","_i4","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","_this4","prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","_prefixOf2","replace","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","SyntaxError","message","expected","found","offset","line","column","peg$FAILED","peg$startRuleIndices","query","peg$startRuleIndex","qs","value","description","f","l","a","m","ast","add","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","each","key","values","ctx","bucket","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","ASTQQuery","ASTQ","_adapter","_cache","cache","entries","compile","selector","execute","root","factory","define","amd","global","window","makeAST","options","__makeAST","makeUnroll","list","j","unshift","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parse","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_prototypeProperties","defineProperties","ASTYBase","init","L","C","O","P","writable","enumerable","configurable","merge","JSON","stringify","splice",2,"ASTYDump","dump",3,4,"_inherits","TypeError","create","__proto__","mixins","extend","./asty-base.js","./asty-dump.js","./asty-mixins.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nmodule.exports = ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.push(adapter)\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\nmodule.exports = ASTQAdapter\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\") \n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1);\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nmodule.exports = stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = require(\"./astq-funcs-std.js\")\n\nclass ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        for (let name in stdfuncs)\n            this.register(name, stdfuncs[name])\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\nmodule.exports = ASTQFuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util          = require(\"./astq-util.js\")\nlet ASTQQueryTrace = require(\"./astq-query-trace.js\")\n\nlet ASTQQueryExec = class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"<~\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"<~~\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~>\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~~>\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"~^\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"~~^\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break \n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\nmodule.exports = ASTQQueryExec\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util = require(\"./astq-util.js\")\n\nlet ASTQQueryTrace = class ASTQQueryTrace {\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n\n        depth = 0\n        let node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n\n        return { prefix1, prefix2 }\n    }\n\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\nmodule.exports = ASTQQueryTrace\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\", \n    { optimize: \"size\", cache: true }\n)\n\nlet ASTQQueryExec = require(\"./astq-query-exec.js\")\n\nlet ASTQQuery = class ASTQQuery {\n    constructor (selector) {\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return ASTY.apply(null, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n    dump () {\n        return this.ast.dump()\n    }\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\nmodule.exports = ASTQQuery\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQCache {\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n    length () {\n        return this._cur\n    }\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires \n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n    _detach (bucket) {\n        /*  detach bucket from list  */\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n    _attach (bucket) {\n        /*  attach bucket to list as MRU bucket  */\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\nmodule.exports = ASTQCache\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    pad (str, num) {\n        if (num < 0)\n            return (str.length > -num ? str.substr(0, -num) : (str + Array((-num) + 1 - str.length).join(\" \")))\n        else\n            return (str.length > num ? str.substr(0, num) : Array(num + 1 - str.length).join(\" \") + str)\n    },\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = (value.length > 0)\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n    coerce (value, type) {\n        let result\n        try {\n            switch (type) {\n                case \"boolean\":\n                    result = Boolean(value)\n                    break\n                case \"number\":\n                    result = Number(value)\n                    break\n                case \"string\":\n                    result = String(value)\n                    break\n                case \"regexp\":\n                    result = new RegExp(value)\n                    break\n                default:\n                    result = value\n            }\n        }\n        catch (e) {\n            throw new Error(\"cannot coerce value into type \" + type)\n        }\n        return result\n    }\n}\n\nmodule.exports = ASTQUtil\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapter = require(\"./astq-adapter.js\")\nlet ASTQFuncs   = require(\"./astq-funcs.js\")\nlet ASTQCache   = require(\"./astq-cache.js\")\nlet ASTQQuery   = require(\"./astq-query.js\")\n\nlet ASTQ = class ASTQ {\n    constructor () {\n        if (!(this instanceof ASTQ))\n            return new ASTQ()\n        this._adapter = new ASTQAdapter()\n        this._funcs   = new ASTQFuncs()\n        this._cache   = new ASTQCache()\n    }\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.register(adapter)\n        return this\n    }\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\nmodule.exports = ASTQ\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Generic Abstract Syntax Tree (AST)\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,r){t&&Object.defineProperties(e,t),r&&Object.defineProperties(e.prototype,r)},ASTYBase=function(){function e(){}return _prototypeProperties(e,null,{init:{value:function(e){if(\"undefined\"==typeof e)throw new Error(\"init: invalid argument\");return this.ASTy=!0,this.T=e,this.L={L:0,C:0,O:0},this.A={},this.C=[],this.P=null,this},writable:!0,enumerable:!0,configurable:!0},merge:{value:function(e,t,r){if(\"object\"!=typeof e)throw new Error(\"merge: invalid AST node argument\");\"undefined\"==typeof t&&(t=!1),\"undefined\"==typeof r&&(r={});var n=this;if(t){var i=e.pos();n.pos(i.L,i.C,i.O)}return e.attrs().forEach(function(t){var i=\"undefined\"!=typeof r[t]?r[t]:t;null!==i&&n.set(i,e.get(t))}),e.childs().forEach(function(e){n.add(e)}),this},writable:!0,enumerable:!0,configurable:!0},type:{value:function(e){if(0===arguments.length)return this.T;if(1===arguments.length)return this.T=e,this;throw new Error(\"type: invalid number of arguments\")},writable:!0,enumerable:!0,configurable:!0},pos:{value:function(e,t,r){if(0===arguments.length)return this.L;if(arguments.length<=3)return this.L.L=e||0,this.L.C=t||0,this.L.O=r||0,this;throw new Error(\"pos: invalid number of arguments\")},writable:!0,enumerable:!0,configurable:!0},set:{value:function(){if(1===arguments.length&&\"object\"==typeof arguments[0]){var e=this,t=arguments;Object.keys(t[0]).forEach(function(r){e.A[r]=t[0][r]})}else{if(2!==arguments.length)throw new Error(\"set: invalid arguments\");this.A[arguments[0]]=arguments[1]}return this},writable:!0,enumerable:!0,configurable:!0},get:{value:function(e){if(1!==arguments.length)throw new Error(\"get: invalid number of arguments\");if(\"string\"!=typeof e)throw new Error(\"get: invalid argument\");return this.A[e]},writable:!0,enumerable:!0,configurable:!0},attrs:{value:function(){return Object.keys(this.A)},writable:!0,enumerable:!0,configurable:!0},add:{value:function(){if(0===arguments.length)throw new Error(\"add: missing argument(s)\");var e=function(e,t){if(!(\"object\"==typeof t&&\"string\"==typeof t.T&&\"object\"==typeof t.L&&\"object\"==typeof t.A&&\"object\"==typeof t.P&&\"object\"==typeof t.C&&t.C instanceof Array))throw new Error(\"add: invalid AST node: \"+JSON.stringify(t));e.C.push(t),t.P=e};if(null!==arguments){var t=this;Array.prototype.slice.call(arguments,0).forEach(function(r){\"object\"==typeof r&&r instanceof Array?r.forEach(function(r){e(t,r)}):null!==r&&e(t,r)})}return this},writable:!0,enumerable:!0,configurable:!0},del:{value:function(){if(0===arguments.length)throw new Error(\"del: invalid argument\");var e=this;return Array.prototype.slice.call(arguments,0).forEach(function(t){for(var r=!1,n=0;n<e.C.length;n++)if(e.C[n]===t){e.C.splice(n,1),t.P=null,r=!0;break}if(!r)throw new Error(\"del: child not found\")}),this},writable:!0,enumerable:!0,configurable:!0},childs:{value:function(){return this.C},writable:!0,enumerable:!0,configurable:!0},parent:{value:function(){return this.P},writable:!0,enumerable:!0,configurable:!0},walk:{value:function(e,t){\"undefined\"==typeof t&&(t=\"downward\");var r=function(n,i,a){(\"downward\"===t||\"both\"===t)&&e.call(null,n,i,a,\"downward\"),n.C.forEach(function(e){r(e,i+1,n)}),(\"upward\"===t||\"both\"===t)&&e.call(null,n,i,a,\"upward\")};return r(this,0,null),this},writable:!0,enumerable:!0,configurable:!0}}),e}();module.exports=ASTYBase;\n},{}],2:[function(require,module,exports){\n\"use strict\";var _prototypeProperties=function(e,r,t){r&&Object.defineProperties(e,r),t&&Object.defineProperties(e.prototype,t)},ASTYDump=function(){function e(){}return _prototypeProperties(e,null,{dump:{value:function(){var e=\"\";return this.walk(function(r,t){for(var n=0;t>n;n++)e+=\"    \";e+=r.T+\" \";var o=Object.keys(r.A);if(o.length>0){e+=\"(\";var i=!0;o.forEach(function(t){i?i=!1:e+=\", \",e+=t+\": \";var n=r.A[t];switch(typeof n){case\"string\":e+='\"'+n.replace(/\\n/,\"\\\\n\").replace(/\"/,'\\\\\"')+'\"';break;case\"object\":e+=n instanceof RegExp?\"/\"+n.toString().replace(/^\\//,\"\").replace(/\\/$/,\"\").replace(/\\//g,\"\\\\/\")+\"/\":JSON.stringify(n);break;default:e+=JSON.stringify(n)}}),e+=\") \"}e+=\"[\"+r.L.L+\"/\"+r.L.C+\"]\\n\"},\"downward\"),e},writable:!0,enumerable:!0,configurable:!0}}),e}();module.exports=ASTYDump;\n},{}],3:[function(require,module,exports){\n\"use strict\";module.exports=function(){for(var t=function(){},r=0;r<arguments.length;r++){var o=arguments[r];\"function\"==typeof o&&(o=o.prototype);for(var e in o)Object.prototype.hasOwnProperty.call(o,e)&&(t.prototype[e]=o[e])}return t};\n},{}],4:[function(require,module,exports){\n\"use strict\";var _inherits=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)},ASTYBase=require(\"./asty-base.js\"),ASTYDump=require(\"./asty-dump.js\"),mixins=require(\"./asty-mixins.js\"),ASTY=function(e){function t(){if(this instanceof t)return this.init.apply(this,arguments);var e=new t(\"\");return e.init.apply(e,arguments)}return _inherits(t,e),t}(mixins(ASTYBase,ASTYDump));ASTY.extend=function(e){for(var t in e)ASTY.prototype[t]=e[t]},module.exports=ASTY;\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-mixins.js\":3}]},{},[1,2,3,4])(4)\n});\n\n\n//# sourceMappingURL=asty.map"]}