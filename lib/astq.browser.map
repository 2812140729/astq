{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-xmldom.js","src/astq-funcs-std.js","src/astq-query-exec.js","src/astq-adapter.js","src/astq-funcs.js","src/astq-util.js","src/astq-version.js","src/astq.js","src/astq-adapter-mozast.js","src/astq-query-trace.js","src/astq-query.js","src/astq-cache.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","Array","prototype","slice","call","attributes","map","n","getAttribute","stdfuncs","A","T","depth","pos","pchilds","i","length","Error","nth","num","parseInt","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","util","_interopRequire","require","ASTQQueryTrace","ASTQQueryExec","adapter","params","funcs","trace","this","execQuery","Q","traceBegin","output","forEach","concat","_this","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","push","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","undefined","_parent4","_i4","_parent5","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","args","run","ASTQAdapter","_adapters","register","unshift","unregister","adapters","select","ASTQFuncs","_funcs","name","func","apply","ASTQUtil","pad","join","value","isNaN","Boolean","Number","RegExp","e","version","major","minor","micro","date","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQCache","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","arguments","cache","entries","limit","compile","selector","query","set","execute","ASTQAdapterMozAST","loc","field","hasOwnProperty","names","prefixOf","prefix1","prefix2","_prefixOf","console","log","replace","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","expected","found","offset","line","column","message","parse","input","options","peg$FAILED","peg$c0","peg$c7","peg$c8","a","m","f","ast","add","description","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","max","maxOld","_purge","dispose","cb","each","key","values","ctx","bucket","has","peek","expires","Date","now","del","touch","_promote","_attach","valOld","_detach","clear","root","factory","define","amd","module","exports","global","window","makeAST","__makeAST","makeUnroll","SyntaxError","list","j","excerpt","txt","o","l","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","_add","JSON","stringify","arg","splice",2,"ASTYDump","dump","maxDepth","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nexport default ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nexport default ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 0: false */\n/* global 20150201:  false */\n\nlet version = {\n    major: 1,\n    minor: 1,\n    micro: 0,\n    date:  20150201\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQCache         from \"./astq-cache.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new ASTQCache()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nexport default ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQCache {\n    /*  create LRU cache instance  */\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n\n    /*  get or set the cache limit  */\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n\n    /*  configure function to be called before item is disposed  */\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n\n    /*  get number of items  */\n    length () {\n        return this._cur\n    }\n\n    /*  get keys of all items in order  */\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n\n    /*  get values of all items in order */\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n\n    /*  iterate over all items in order  */\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n\n    /*  check whether item exists under key  */\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n\n    /*  get value under key without promoting item  */\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n\n    /*  explicity promote item under key  */\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n\n    /*  get value under key  */\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n\n    /*  set value under key  */\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires\n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n\n    /*  delete item under key  */\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n\n    /*  delete all items  */\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n\n    /*  INTERNAL: purge all LRU items above limit  */\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n\n    /*  INTERNAL: promote item  */\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n\n    /*  INTERNAL: detach bucket from list  */\n    _detach (bucket) {\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n\n    /*  INTERNAL: attach bucket to list as MRU bucket  */\n    _attach (bucket) {\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});"]}