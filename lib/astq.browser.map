{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-trace.js","src/astq-adapter-xmldom.js","src/astq-version.js","src/astq.js","src/astq-adapter-mozast.js","src/astq-adapter.js","src/astq-query.js","src/astq-util.js","src/astq-query-exec.js","node_modules/cache-lru/lib/cache-lru.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","stdfuncs","A","T","depth","pos","pchilds","i","length","Error","nth","num","parseInt","first","last","count","val","Array","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","this","_funcs","register","name","func","run","args","apply","util","_interopRequire","require","ASTQQueryTrace","prefixOf","Q","prefix1","pad","adapter","prefix2","traceBegin","trace","_prefixOf","console","log","traceEnd","result","undefined","forEach","_this","replace","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","version","major","minor","micro","date","CacheLRU","ASTQAdapter","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","arguments","unregister","cache","entries","limit","compile","selector","query","set","execute","params","select","ASTQAdapterMozAST","loc","field","hasOwnProperty","push","names","_adapters","unshift","adapters","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","expected","found","offset","line","column","message","parse","input","options","peg$FAILED","peg$c0","peg$c7","peg$c8","a","m","f","ast","add","value","description","ASTQUtil","join","truthy","isNaN","coerce","Boolean","Number","RegExp","e","ASTQQueryExec","funcs","execQuery","output","concat","execPath","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","expr","execExpr","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","v2","Math","pow","v","exports","module","define","amd","window","global","self","t","r","s","o","u","code","l",1,"_dereq_","_prototypeProperties","defineProperties","_classCallCheck","TypeError","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","writable","configurable","dispose","each","values","key","has","peek","expires","Date","now","del","touch","_promote","_attach","_detach","clear","root","factory","makeAST","__makeAST","makeUnroll","SyntaxError","list","j","excerpt","txt","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","staticProps","instanceProps","ASTYBase","init","C","L","O","P","_arguments","_add","JSON","stringify","arg","splice",2,"ASTYDump","dump","maxDepth","Infinity","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","cb","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nexport default ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nexport default ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 0: false */\n/* global 20150204:  false */\n\nlet version = {\n    major: 1,\n    minor: 2,\n    micro: 0,\n    date:  20150204\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nexport default ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CacheLRU=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,i){t&&Object.defineProperties(e,t),i&&Object.defineProperties(e.prototype,i)},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _prototypeProperties(e,null,{limit:{value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t},writable:!0,configurable:!0},dispose:{value:function(e){return this._dispose=e,this},writable:!0,configurable:!0},length:{value:function(){return this._cur},writable:!0,configurable:!0},keys:{value:function(){return this.each(function(e,t){this.push(t)},[])},writable:!0,configurable:!0},values:{value:function(){return this.each(function(e){this.push(e)},[])},writable:!0,configurable:!0},each:{value:function(e,t){arguments<2&&(t=this);for(var i=0,r=this._MRU.older;r!==this._LRU;)e.call(t,r.val,r.key,i++),r=r.older;return t},writable:!0,configurable:!0},has:{value:function(e){var t=this._index[e];return void 0!==t},writable:!0,configurable:!0},peek:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):t.val},writable:!0,configurable:!0},touch:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this},writable:!0,configurable:!0},get:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)},writable:!0,configurable:!0},set:{value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var r=this._index[e];if(void 0===r)r={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=r,this._attach(r),this._cur++,this._purge();else{var n=r.val;r.val=t,this._promote(r),this._dispose.call(void 0,r.key,n,\"set\")}return this},writable:!0,configurable:!0},del:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this},writable:!0,configurable:!0},clear:{value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this},writable:!0,configurable:!0},_purge:{value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)},writable:!0,configurable:!0},_promote:{value:function(e){this._detach(e),this._attach(e)},writable:!0,configurable:!0},_detach:{value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null},writable:!0,configurable:!0},_attach:{value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e},writable:!0,configurable:!0}}),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});"]}