{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-adapter.js","src/astq-cache.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-query.js","src/astq-util.js","src/astq.js","node_modules/asty/lib/asty.node.js","node_modules/pegjs-util/PEGUtil.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","module","exports","ASTQAdapterMozAST","loc","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","ASTQAdapter","_adapters","register","adapter","unshift","unregister","adapters","i","length","select","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","keys","each","val","key","values","ctx","bucket","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear","stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","first","last","count","Object","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","_funcs","name","func","run","args","apply","util","require","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","_this2","execStep","axis","match","filter","id","matchAndTake","_this3","take","execFilter","op","walk","leftSibling","_i","_i2","_i3","_i4","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","_this4","prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","_prefixOf2","replace","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","message","expected","found","offset","line","column","parse","input","peg$startRuleFunctions","query","peg$parsequery","peg$c0","peg$FAILED","peg$c3","value","description","peg$c5","f","l","ast","add","unroll","peg$c6","peg$c10","peg$c12","SyntaxError","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQ","_adapter","_cache","cache","entries","compile","selector","execute","define","amd","window","global","self","t","r","s","o","u","a","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","enumerable","configurable","_add","JSON","stringify","arg","j","splice",2,"ASTYDump","dump","maxDepth","out","toString",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js","root","factory","makeAST","options","__makeAST","makeUnroll","list","excerpt","txt","b","hex","ch","charCodeAt","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nmodule.exports = ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\nmodule.exports = ASTQAdapter\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQCache {\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n    length () {\n        return this._cur\n    }\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires\n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n    _detach (bucket) {\n        /*  detach bucket from list  */\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n    _attach (bucket) {\n        /*  attach bucket to list as MRU bucket  */\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\nmodule.exports = ASTQCache\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1);\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nmodule.exports = stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\nmodule.exports = ASTQFuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util          = require(\"./astq-util.js\")\nlet ASTQQueryTrace = require(\"./astq-query-trace.js\")\n\nlet ASTQQueryExec = class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"<~\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"<~~\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~>\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~~>\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"~^\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"~~^\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\nmodule.exports = ASTQQueryExec\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util = require(\"./astq-util.js\")\n\nlet ASTQQueryTrace = class ASTQQueryTrace {\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n\n        depth = 0\n        let node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n\n        return { prefix1, prefix2 }\n    }\n\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\nmodule.exports = ASTQQueryTrace\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\nlet ASTQQueryExec = require(\"./astq-query-exec.js\")\n\nlet ASTQQuery = class ASTQQuery {\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n    dump () {\n        return this.ast.dump()\n    }\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\nmodule.exports = ASTQQuery\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    pad (str, num) {\n        if (num < 0)\n            return (str.length > -num ? str.substr(0, -num) : (str + Array((-num) + 1 - str.length).join(\" \")))\n        else\n            return (str.length > num ? str.substr(0, num) : Array(num + 1 - str.length).join(\" \") + str)\n    },\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = (value.length > 0)\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n    coerce (value, type) {\n        let result\n        try {\n            switch (type) {\n                case \"boolean\":\n                    result = Boolean(value)\n                    break\n                case \"number\":\n                    result = Number(value)\n                    break\n                case \"string\":\n                    result = String(value)\n                    break\n                case \"regexp\":\n                    result = new RegExp(value)\n                    break\n                default:\n                    result = value\n            }\n        }\n        catch (e) {\n            throw new Error(\"cannot coerce value into type \" + type)\n        }\n        return result\n    }\n}\n\nmodule.exports = ASTQUtil\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapter       = require(\"./astq-adapter.js\")\nlet ASTQAdapterASTY   = require(\"./astq-adapter-asty.js\")\nlet ASTQAdapterMOZAST = require(\"./astq-adapter-xmldom.js\")\nlet ASTQAdapterXMLDOM = require(\"./astq-adapter-xmldom.js\")\nlet ASTQFuncs         = require(\"./astq-funcs.js\")\nlet ASTQFuncsSTD      = require(\"./astq-funcs-std.js\")\nlet ASTQCache         = require(\"./astq-cache.js\")\nlet ASTQQuery         = require(\"./astq-query.js\")\n\nlet ASTQ = class ASTQ {\n    constructor () {\n        if (!(this instanceof ASTQ))\n            return new ASTQ()\n        this._adapter = new ASTQAdapter()\n        this._funcs   = new ASTQFuncs()\n        this._cache   = new ASTQCache()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n    }\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\nmodule.exports = ASTQ\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n  function ASTYBase() {}\n\n  _prototypeProperties(ASTYBase, null, {\n    init: {\n      /*  AST node initialization  */\n      value: function init(T, A, C) {\n        if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n        this.ASTy = true;\n        this.T = T;\n        this.L = { L: 0, C: 0, O: 0 };\n        this.A = {};\n        this.C = [];\n        this.P = null;\n        if (typeof A === \"object\") {\n          for (var name in A) {\n            if (A.hasOwnProperty(name)) this.set(name, A[name]);\n          }\n        }\n        if (typeof C === \"object\" && C instanceof Array) this.add(C);\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    type: {\n\n      /*  check the type of an AST node  */\n      value: function type(T) {\n        if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n          this.T = T;\n          return this;\n        } else throw new Error(\"type: invalid number of arguments\");\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    pos: {\n\n      /*  set the parsing position   */\n      value: function pos(L, C, O) {\n        if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n          this.L.L = L || 0;\n          this.L.C = C || 0;\n          this.L.O = O || 0;\n          return this;\n        } else throw new Error(\"pos: invalid number of arguments\");\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    set: {\n\n      /*  set AST node attributes  */\n      value: function set() {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n          var self = this;\n          var args = arguments;\n          Object.keys(args[0]).forEach(function (key) {\n            self.A[key] = args[0][key];\n          });\n        } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    get: {\n\n      /*  get AST node attributes  */\n      value: function get(key) {\n        if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n        if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n        return this.A[key];\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    attrs: {\n\n      /*  get names of all AST node attributes  */\n      value: function attrs() {\n        return Object.keys(this.A);\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    add: {\n\n      /*  add child AST node(s)  */\n      value: function add() {\n        if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n        var _add = function (node, child) {\n          if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n          node.C.push(child);\n          child.P = node;\n        };\n        if (arguments !== null) {\n          var self = this;\n          Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n            if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n              _add(self, child);\n            });else if (arg !== null) _add(self, arg);\n          });\n        }\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    del: {\n\n      /*  delete child AST node(s)  */\n      value: function del() {\n        if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n        var self = this;\n        Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n          var found = false;\n          for (var j = 0; j < self.C.length; j++) {\n            if (self.C[j] === arg) {\n              self.C.splice(j, 1);\n              arg.P = null;\n              found = true;\n              break;\n            }\n          }\n          if (!found) throw new Error(\"del: child not found\");\n        });\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    childs: {\n\n      /*  get child AST nodes  */\n      value: function childs() {\n        return this.C;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    parent: {\n\n      /*  get parent AST node  */\n      value: function parent() {\n        return this.P;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n  function ASTYDump() {}\n\n  _prototypeProperties(ASTYDump, null, {\n    dump: {\n      /*  dump the AST recursively  */\n      value: function dump(maxDepth) {\n        if (maxDepth === undefined) maxDepth = Infinity;\n        var out = \"\";\n        this.walk(function (node, depth /*, parent, when */) {\n          if (depth > maxDepth) return;\n          for (var i = 0; i < depth; i++) out += \"    \";\n          out += node.T + \" \";\n          var keys = Object.keys(node.A);\n          if (keys.length > 0) {\n            out += \"(\";\n            var first = true;\n            keys.forEach(function (key) {\n              if (!first) out += \", \";else first = false;\n              out += key + \": \";\n              var value = node.A[key];\n              switch (typeof value) {\n                case \"string\":\n                  out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                  break;\n                case \"object\":\n                  if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                  break;\n                default:\n                  out += JSON.stringify(value);\n                  break;\n              }\n            });\n            out += \") \";\n          }\n          out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n        }, \"downward\");\n        return out;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n  function ASTYMerge() {}\n\n  _prototypeProperties(ASTYMerge, null, {\n    merge: {\n      /*  merge attributes and childs of an AST node  */\n      value: function merge(node, takePos, attrMap) {\n        if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n        if (typeof takePos === \"undefined\") takePos = false;\n        if (typeof attrMap === \"undefined\") attrMap = {};\n        var self = this;\n        if (takePos) {\n          var pos = node.pos();\n          self.pos(pos.L, pos.C, pos.O);\n        }\n        node.attrs().forEach(function (attrSource) {\n          var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n          if (attrTarget !== null) self.set(attrTarget, node.get(attrSource));\n        });\n        node.childs().forEach(function (child) {\n          self.add(child);\n        });\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n  function ASTYWalk() {}\n\n  _prototypeProperties(ASTYWalk, null, {\n    walk: {\n      /*  walk the AST recursively  */\n      value: function walk(cb, when) {\n        if (typeof when === \"undefined\") when = \"downward\";\n        var _walk = function (node, depth, parent) {\n          if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n          node.C.forEach(function (child) {\n            _walk(child, depth + 1, node);\n          });\n          if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n        };\n        _walk(this, 0, null);\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n  function ASTYCtx() {\n    var _this = this;\n    if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n    this.ASTYNode = function () {};\n    var mixins = [ASTYBase, ASTYMerge, ASTYWalk, ASTYDump];\n    mixins.forEach(function (mixin) {\n      for (var method in mixin.prototype) {\n        if (mixin.prototype.hasOwnProperty(method)) _this.ASTYNode.prototype[method] = mixin.prototype[method];\n      }\n    });\n    return this;\n  }\n\n  _prototypeProperties(ASTYCtx, null, {\n    extend: {\n      value: function extend(mixin) {\n        for (var method in mixin) {\n          if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n        }return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    create: {\n      value: function create(type) {\n        return new this.ASTYNode().init(type);\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    isA: {\n      value: function isA(node) {\n        return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n"]}