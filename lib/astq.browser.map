{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-xmldom.js","src/astq-adapter.js","src/astq-funcs.js","src/astq-funcs-std.js","src/astq-query.js","src/astq-adapter-mozast.js","src/astq-util.js","src/astq-adapter-asty.js","src/astq.js","src/astq-version.js","src/astq-query-trace.js","src/astq-query-exec.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js","node_modules/cache-lru/lib/cache-lru.js"],"names":["ASTQAdapterXMLDOM","taste","node","Node","nodeType","nodeName","getParentNode","parentNode","getChildNodes","childNodes","getNodeType","getNodeAttrNames","Array","prototype","slice","call","attributes","map","n","getNodeAttrValue","attr","getAttribute","ASTQAdapter","this","_adapters","register","adapter","unshift","unregister","undefined","adapters","i","length","push","select","ASTQFuncs","_funcs","name","func","run","args","Error","apply","stdfuncs","type","A","T","depth","pos","parent","pchilds","nth","num","parseInt","_pchilds","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTY","require","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","SyntaxError","message","expected","found","offset","line","column","arguments","peg$FAILED","peg$startRuleFunctions","query","peg$parsequery","qs","peg$c4","value","description","f","l","ast","add","unroll","a","m","peg$c9","ASTQAdapterMozAST","loc","childs","field","hasOwnProperty","forEach","_this","names","ASTQUtil","pad","join","truthy","result","isNaN","coerce","Boolean","Number","RegExp","e","ASTQAdapterASTY","ASTy","attrs","get","CacheLRU","_interopRequire","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","version","cache","entries","limit","compile","selector","trace","set","execute","params","major","minor","micro","date","util","ASTQQueryTrace","prefixOf","Q","prefix1","prefix2","traceBegin","_prefixOf","console","log","traceEnd","replace","ASTQQueryExec","funcs","execQuery","output","concat","execPath","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","_parent6","expr","execExpr","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","v2","Math","pow","v","root","factory","define","amd","module","exports","global","window","makeAST","options","__makeAST","makeUnroll","list","j","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parse","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","_classCallCheck","instance","Constructor","TypeError","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","key","_add","JSON","stringify","arg","del","splice",2,"ASTYDump","dump","maxDepth","Infinity","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,5,"ASTYWalk","cb","when","_walk",6,"obj","__esModule","ASTYVersion","ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-version.js","./asty-walk.js","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","dispose","each","values","has","peek","expires","Date","now","touch","_promote","_attach","_detach","clear"],"mappings":"AAAA;;CcwBC,SAASsH,GAAG,GAAG,gBAAiBgG,UAAS,mBAAoBD,QAAOA,OAAOC,QAAQhG,QAAS,IAAG,kBAAmB6F,SAAQA,OAAOC,IAAID,UAAU7F,OAAO,CAAC,GAAI1B,EAAE,oBAAoB4H,QAAO5H,EAAE4H,OAAO,mBAAoBD,QAAO3H,EAAE2H,OAAO,mBAAoB+B,QAAO1J,EAAE0J,MAAM1J,EAAEvB,KAAKiD,MAAM,WAAqC,MAAO,SAAUA,GAAEiI,EAAErO,EAAEsO,GAAG,QAASC,GAAExB,EAAEyB,GAAG,IAAIxO,EAAE+M,GAAG,CAAC,IAAIsB,EAAEtB,GAAG,CAAC,GAAIhI,GAAkB,kBAAT3B,UAAqBA,OAAQ,KAAIoL,GAAGzJ,EAAE,MAAOA,GAAEgI,GAAE,EAAI,IAAGlM,EAAE,MAAOA,GAAEkM,GAAE,EAAI,IAAIrI,GAAE,GAAInD,OAAM,uBAAuBwL,EAAE,IAAK,MAAMrI,GAAE+J,KAAK,mBAAmB/J,EAAE,GAAIC,GAAE3E,EAAE+M,IAAIX,WAAYiC,GAAEtB,GAAG,GAAGlN,KAAK8E,EAAEyH,QAAQ,SAAShG,GAAG,GAAIpG,GAAEqO,EAAEtB,GAAG,GAAG3G,EAAG,OAAOmI,GAAEvO,EAAEA,EAAEoG,IAAIzB,EAAEA,EAAEyH,QAAQhG,EAAEiI,EAAErO,EAAEsO,GAAG,MAAOtO,GAAE+M,GAAGX,QAAkD,IAAI,GAA1CvL,GAAkB,kBAATuC,UAAqBA,QAAgB2J,EAAE,EAAEA,EAAEuB,EAAExN,OAAOiM,IAAIwB,EAAED,EAAEvB,GAAI,OAAOwB,KAAKG,GAAG,SAASC,EAAQxC,GAClxB,YAEA,IAAIyC,GAAuB,SAAUpL,EAAOqL,EAAaC,GAAqBD,GAAapM,OAAOsM,iBAAiBvL,EAAOqL,GAAkBC,GAAerM,OAAOsM,iBAAiBvL,EAAM7D,UAAWmP,IAEhME,EAAkB,SAAUC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,sCA0BnHC,EAAW,WACX,QAASA,KACLJ,EAAgB3O,KAAM+O,GA4J1B,MAzJAR,GAAqBQ,EAAU,MAC3BC,MAEI7K,MAAO,SAAc5C,EAAGD,EAAG2N,GACvB,GAAiB,mBAAN1N,GAAmB,KAAM,IAAIL,OAAM,yBAO9C,IANAlB,KAAKiG,MAAO,EACZjG,KAAKuB,EAAIA,EACTvB,KAAKkP,GAAMA,EAAG,EAAGD,EAAG,EAAGE,EAAG,GAC1BnP,KAAKsB,KACLtB,KAAKiP,KACLjP,KAAKoP,EAAI,KACQ,gBAAN9N,GACP,IAAK,GAAIsF,KAAStF,GACVA,EAAE2D,eAAe2B,IAAQ5G,KAAKqH,IAAIT,EAAOtF,EAAEsF,GAIvD,OADiB,gBAANqI,IAAkBA,YAAa5P,QAAOW,KAAKwE,IAAIyK,GACnDjP,MAEXqP,UAAU,EACVC,cAAc,GAElBjO,MAGI8C,MAAO,SAAc5C,GACjB,GAAyB,IAArBqC,UAAUnD,OAAc,MAAOT,MAAKuB,CAAO,IAAyB,IAArBqC,UAAUnD,OAEzD,MADAT,MAAKuB,EAAIA,EACFvB,IACJ,MAAM,IAAIkB,OAAM,sCAE3BmO,UAAU,EACVC,cAAc,GAElB7N,KAGI0C,MAAO,SAAa+K,EAAGD,EAAGE,GACtB,GAAyB,IAArBvL,UAAUnD,OAAc,MAAOT,MAAKkP,CAAO,IAAItL,UAAUnD,QAAU,EAInE,MAHAT,MAAKkP,EAAEA,EAAIA,GAAK,EAChBlP,KAAKkP,EAAED,EAAIA,GAAK,EAChBjP,KAAKkP,EAAEC,EAAIA,GAAK,EACTnP,IACJ,MAAM,IAAIkB,OAAM,qCAE3BmO,UAAU,EACVC,cAAc,GAElBjI,KAGIlD,MAAO,WACH,GAAIgB,GAAQnF,KACRuP,EAAa3L,SACjB,IAAyB,IAArBA,UAAUnD,QAAwC,gBAAjBmD,WAAU,IAC3C,WACI,GAAI3C,GAAOsO,CACXnN,QAAOC,KAAKpB,EAAK,IAAIiE,QAAQ,SAAUsK,GACnCrK,EAAM7D,EAAEkO,GAAOvO,EAAK,GAAGuO,YAG5B,CAAA,GAAyB,IAArB5L,UAAUnD,OAAuD,KAAM,IAAIS,OAAM,yBAAzDlB,MAAKsB,EAAEsC,UAAU,IAAMA,UAAU,GACpE,MAAO5D,OAEXqP,UAAU,EACVC,cAAc,GAElBnJ,KAGIhC,MAAO,SAAaqL,GAChB,GAAyB,IAArB5L,UAAUnD,OAAc,KAAM,IAAIS,OAAM,mCAC5C,IAAmB,gBAARsO,GAAkB,KAAM,IAAItO,OAAM,wBAC7C,OAAOlB,MAAKsB,EAAEkO,IAElBH,UAAU,EACVC,cAAc,GAElBpJ,OAGI/B,MAAO,WACH,MAAO/B,QAAOC,KAAKrC,KAAKsB,IAE5B+N,UAAU,EACVC,cAAc,GAElB9K,KAGIL,MAAO,WACH,GAAIgB,GAAQnF,IACZ,IAAyB,IAArB4D,UAAUnD,OAAc,KAAM,IAAIS,OAAM,2BAC5C,IAAIuO,GAAO,SAAU9Q,EAAMwE,GACvB,KAAuB,gBAAVA,IAAyC,gBAAZA,GAAM5B,GAAqC,gBAAZ4B,GAAM+L,GAAqC,gBAAZ/L,GAAM7B,GAAqC,gBAAZ6B,GAAMiM,GAAsC,gBAAZjM,GAAM8L,GAAkB9L,EAAM8L,YAAa5P,QAAS,KAAM,IAAI6B,OAAM,0BAA4BwO,KAAKC,UAAUxM,GACtRxE,GAAKsQ,EAAEvO,KAAKyC,GACZA,EAAMiM,EAAIzQ,EASd,OAPkB,QAAdiF,WACAvE,MAAMC,UAAUC,MAAMC,KAAKoE,UAAW,GAAGsB,QAAQ,SAAU0K,GACpC,gBAARA,IAAoBA,YAAevQ,OAAOuQ,EAAI1K,QAAQ,SAAU/B,GACvEsM,EAAKtK,EAAOhC,KACI,OAARyM,GAAcH,EAAKtK,EAAOyK,KAGvC5P,MAEXqP,UAAU,EACVC,cAAc,GAElBO,KAGI1L,MAAO,WACH,GAAIgB,GAAQnF,IACZ,IAAyB,IAArB4D,UAAUnD,OAAc,KAAM,IAAIS,OAAM,wBAa5C,OAZA7B,OAAMC,UAAUC,MAAMC,KAAKoE,UAAW,GAAGsB,QAAQ,SAAU0K,GAEvD,IAAK,GADDpM,IAAQ,EACH+I,EAAI,EAAGA,EAAIpH,EAAM8J,EAAExO,OAAQ8L,IAChC,GAAIpH,EAAM8J,EAAE1C,KAAOqD,EAAK,CACpBzK,EAAM8J,EAAEa,OAAOvD,EAAG,GAClBqD,EAAIR,EAAI,KACR5L,GAAQ,CACR,OAGR,IAAKA,EAAO,KAAM,IAAItC,OAAM,0BAEzBlB,MAEXqP,UAAU,EACVC,cAAc,GAElBvK,QAGIZ,MAAO,WACH,MAAOnE,MAAKiP,GAEhBI,UAAU,EACVC,cAAc,GAElB5N,QAGIyC,MAAO,WACH,MAAOnE,MAAKoP,GAEhBC,UAAU,EACVC,cAAc,KAIfP,IAGXjD,GAAOC,QAAUgD,OAEXgB,GAAG,SAASzB,EAAQxC,GAC1B,YAEA,IAAIyC,GAAuB,SAAUpL,EAAOqL,EAAaC,GAAqBD,GAAapM,OAAOsM,iBAAiBvL,EAAOqL,GAAkBC,GAAerM,OAAOsM,iBAAiBvL,EAAM7D,UAAWmP,IAEhME,EAAkB,SAAUC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,sCA0BnHkB,EAAW,WACX,QAASA,KACLrB,EAAgB3O,KAAMgQ,GA+C1B,MA5CAzB,GAAqByB,EAAU,MAC3BC,MAEI9L,MAAO,SAAc+L,GACA5P,SAAb4P,IAAwBA,EAAWC,IACvC,IAAIC,GAAM,EAgCV,OA/BApQ,MAAKwJ,KAAK,SAAU7K,EAAM6C,GACtB,KAAIA,EAAQ0O,GAAZ,CACA,IAAK,GAAI1P,GAAI,EAAOgB,EAAJhB,EAAWA,IACvB4P,GAAO,MACVA,IAAOzR,EAAK4C,EAAI,GACjB,IAAIc,GAAOD,OAAOC,KAAK1D,EAAK2C,EACxBe,GAAK5B,OAAS,IACd,WACI2P,GAAO,GACP,IAAIpO,IAAQ,CACZK,GAAK6C,QAAQ,SAAUsK,GACdxN,EAAwBA,GAAQ,EAAzBoO,GAAO,KACnBA,GAAOZ,EAAM,IACb,IAAIrL,GAAQxF,EAAK2C,EAAEkO,EACnB,cAAerL,IACX,IAAK,SACDiM,GAAO,IAAOjM,EAAMoE,QAAQ,KAAM,OAAOA,QAAQ,IAAK,OAAU,GAChE,MACJ,KAAK,SAC4B6H,GAAzBjM,YAAiB2B,QAAe,IAAM3B,EAAM4I,WAAWxE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAAS,IAAgBmH,KAAKC,UAAUxL,EACxJ,MACJ,SACIiM,GAAOV,KAAKC,UAAUxL,MAIlCiM,GAAO,QAGfA,GAAO,IAAMzR,EAAKuQ,EAAEA,EAAI,IAAMvQ,EAAKuQ,EAAED,EAAI,QAC1C,YACImB,GAEXf,UAAU,EACVC,cAAc,KAIfU,IAGXlE,GAAOC,QAAUiE,OAEXK,GAAG,SAAS/B,EAAQxC,GAC1B,YAEA,IAAIyC,GAAuB,SAAUpL,EAAOqL,EAAaC,GAAqBD,GAAapM,OAAOsM,iBAAiBvL,EAAOqL,GAAkBC,GAAerM,OAAOsM,iBAAiBvL,EAAM7D,UAAWmP,IAEhME,EAAkB,SAAUC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,sCA0BnHwB,EAAY,WACZ,QAASA,KACL3B,EAAgB3O,KAAMsQ,GA6B1B,MA1BA/B,GAAqB+B,EAAW,MAC5BC,OAEIpM,MAAO,SAAexF,EAAM6R,EAASC,GACjC,GAAItL,GAAQnF,IACZ,IAAoB,gBAATrB,GAAmB,KAAM,IAAIuC,OAAM,mCAG9C,IAFuB,mBAAZsP,KAAyBA,GAAU,GACvB,mBAAZC,KAAyBA,MAChCD,EAAS,CACT,GAAI/O,GAAM9C,EAAK8C,KACfzB,MAAKyB,IAAIA,EAAIyN,EAAGzN,EAAIwN,EAAGxN,EAAI0N,GAS/B,MAPAxQ,GAAKuH,QAAQhB,QAAQ,SAAUwL,GAC3B,GAAIC,GAA4C,mBAAxBF,GAAQC,GAA8BD,EAAQC,GAAcA,CACjE,QAAfC,GAAqBxL,EAAMkC,IAAIsJ,EAAYhS,EAAKwH,IAAIuK,MAE5D/R,EAAKoG,SAASG,QAAQ,SAAU/B,GAC5BgC,EAAMX,IAAIrB,KAEPnD,MAEXqP,UAAU,EACVC,cAAc,KAIfgB,IAGXxE,GAAOC,QAAUuE,OAEXM,GAAG,SAAStC,EAAQxC,GAC1B,YA+BA,IAAIhF,IACAU,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAM,SAGVmE,GAAOC,QAAUjF,OAEX+J,GAAG,SAASvC,EAAQxC,GAC1B,YAEA,IAAIyC,GAAuB,SAAUpL,EAAOqL,EAAaC,GAAqBD,GAAapM,OAAOsM,iBAAiBvL,EAAOqL,GAAkBC,GAAerM,OAAOsM,iBAAiBvL,EAAM7D,UAAWmP,IAEhME,EAAkB,SAAUC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,sCA0BnHgC,EAAW,WACX,QAASA,KACLnC,EAAgB3O,KAAM8Q,GAuB1B,MApBAvC,GAAqBuC,EAAU,MAC3BtH,MAEIrF,MAAO,SAAc4M,EAAIC,GACD,mBAATA,KAAsBA,EAAO,WACxC,IAAIC,GAAQ,SAAUtS,EAAM6C,EAAOE,IAClB,aAATsP,GAAgC,SAATA,IAAiBD,EAAGvR,KAAK,KAAMb,EAAM6C,EAAOE,EAAQ,YAC/E/C,EAAKsQ,EAAE/J,QAAQ,SAAU/B,GACrB8N,EAAM9N,EAAO3B,EAAQ,EAAG7C,MAEf,WAATqS,GAA8B,SAATA,IAAiBD,EAAGvR,KAAK,KAAMb,EAAM6C,EAAOE,EAAQ,UAGjF,OADAuP,GAAMjR,KAAM,EAAG,MACRA,MAEXqP,UAAU,EACVC,cAAc,KAIfwB,IAGXhF,GAAOC,QAAU+E,OAEXI,GAAG,SAAS5C,EAAQxC,GAC1B,YAEA,IAAIzF,GAAkB,SAAU8K,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,GAEnF5C,EAAuB,SAAUpL,EAAOqL,EAAaC,GAAqBD,GAAapM,OAAOsM,iBAAiBvL,EAAOqL,GAAkBC,GAAerM,OAAOsM,iBAAiBvL,EAAM7D,UAAWmP,IAEhME,EAAkB,SAAUC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,sCA0BnHC,EAAW1I,EAAgBiI,EAAQ,mBAEnCgC,EAAYjK,EAAgBiI,EAAQ,oBAEpCwC,EAAWzK,EAAgBiI,EAAQ,mBAEnC0B,EAAW3J,EAAgBiI,EAAQ,mBAEnC+C,EAAchL,EAAgBiI,EAAQ,sBAEtCgD,EAAU,WACV,QAASA,KACL,GAAInM,GAAQnF,IACZ2O,GAAgB3O,KAAMsR,GAEtBtR,KAAKuR,SAAW,YAChB,IAAIC,KAAWzC,EAAU,OAAQ,OAAQ,MAAO,MAAO,MAAO,QAAS,MAAO,MAAO,SAAU,WAAYuB,EAAW,UAAWQ,EAAU,SAAUd,EAAU,QAO/J,OANAwB,GAAOtM,QAAQ,SAAUuM,GACrB,GAAIC,GAAQD,EAAM,GAAGnS,SACrBmS,GAAMlS,MAAM,GAAG2F,QAAQ,SAAUyM,GAC7BxM,EAAMoM,SAASjS,UAAUqS,GAAUD,EAAMC,OAG1C3R,KAoCX,MAjCAuO,GAAqB+C,EAAS,MAC1BxK,SACI3C,MAAO,WACH,MAAOkN,IAEXhC,UAAU,EACVC,cAAc,GAElBsC,QACIzN,MAAO,SAAgBsN,GACnB,IAAK,GAAIE,KAAUF,GACXA,EAAMxM,eAAe0M,KAAS3R,KAAKuR,SAASjS,UAAUqS,GAAUF,EAAME,GAC7E,OAAO3R,OAEZqP,UAAU,EACVC,cAAc,GAElBuC,QACI1N,MAAO,SAAgB9C,GACnB,OAAO,GAAIrB,MAAKuR,UAAWvC,KAAK3N,IAEpCgO,UAAU,EACVC,cAAc,GAElBwC,KACI3N,MAAO,SAAaxF,GAChB,MAAuB,gBAATA,IAAqBA,YAAgBqB,MAAKuR,UAAiC,iBAAd5S,GAAKsH,MAAsBtH,EAAKsH,QAAS,GAExHoJ,UAAU,EACVC,cAAc,KAIfgC,IAGXxF,GAAOC,QAAUuF,IAEdS,iBAAiB,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,oBAAoB,EAAEC,iBAAiB,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI;;;;;CCjiB1H,SAASpM,GAAG,GAAG,gBAAiBgG,UAAS,mBAAoBD,QAAOA,OAAOC,QAAQhG,QAAS,IAAG,kBAAmB6F,SAAQA,OAAOC,IAAID,UAAU7F,OAAO,CAAC,GAAI1B,EAAE,oBAAoB4H,QAAO5H,EAAE4H,OAAO,mBAAoBD,QAAO3H,EAAE2H,OAAO,mBAAoB+B,QAAO1J,EAAE0J,MAAM1J,EAAE+B,SAASL,MAAM,WAAqC,MAAO,SAAUA,GAAEiI,EAAErO,EAAEsO,GAAG,QAASC,GAAExB,EAAEyB,GAAG,IAAIxO,EAAE+M,GAAG,CAAC,IAAIsB,EAAEtB,GAAG,CAAC,GAAIhI,GAAkB,kBAAT3B,UAAqBA,OAAQ,KAAIoL,GAAGzJ,EAAE,MAAOA,GAAEgI,GAAE,EAAI,IAAGlM,EAAE,MAAOA,GAAEkM,GAAE,EAAI,IAAIrI,GAAE,GAAInD,OAAM,uBAAuBwL,EAAE,IAAK,MAAMrI,GAAE+J,KAAK,mBAAmB/J,EAAE,GAAIC,GAAE3E,EAAE+M,IAAIX,WAAYiC,GAAEtB,GAAG,GAAGlN,KAAK8E,EAAEyH,QAAQ,SAAShG,GAAG,GAAIpG,GAAEqO,EAAEtB,GAAG,GAAG3G,EAAG,OAAOmI,GAAEvO,EAAEA,EAAEoG,IAAIzB,EAAEA,EAAEyH,QAAQhG,EAAEiI,EAAErO,EAAEsO,GAAG,MAAOtO,GAAE+M,GAAGX,QAAkD,IAAI,GAA1CvL,GAAkB,kBAATuC,UAAqBA,QAAgB2J,EAAE,EAAEA,EAAEuB,EAAExN,OAAOiM,IAAIwB,EAAED,EAAEvB,GAAI,OAAOwB,KAAKG,GAAG,SAASC,EAAQxC,GACtxB,YAAa,IAAIyC,GAAqB,SAASxI,EAAEiI,EAAExN,GAAGwN,GAAG5L,OAAOsM,iBAAiB3I,EAAEiI,GAAGxN,GAAG4B,OAAOsM,iBAAiB3I,EAAEzG,UAAUkB,IAAImO,EAAgB,SAAS5I,EAAEiI,GAAG,KAAKjI,YAAaiI,IAAG,KAAM,IAAIc,WAAU,sCAAsC1I,EAAS,WAAW,QAASL,KAAI,MAAO4I,GAAgB3O,KAAK+F,GAAG/F,KAAKoS,UAAUpS,KAAKqS,MAAMC,MAAM,MAAMtS,KAAKuS,MAAMC,MAAM,MAAMxS,KAAKqS,KAAKC,MAAMtS,KAAKuS,KAAKvS,KAAKuS,KAAKC,MAAMxS,KAAKqS,KAAKrS,KAAKyS,KAAK,EAAEzS,KAAK0S,KAAK,EAAE,EAAE1S,KAAK2S,SAAS,aAAa3S,KAAK,MAAOuO,GAAqBxI,EAAE,MAAMkB,OAAO9C,MAAM,SAAS4B,GAAG,GAAIiI,GAAEhO,KAAK0S,IAAK,OAAO9O,WAAUnD,OAAO,IAAIT,KAAK0S,KAAK3M,EAAE/F,KAAK4S,UAAU5E,GAAGqB,UAAS,EAAGC,cAAa,GAAIuD,SAAS1O,MAAM,SAAS4B,GAAG,MAAO/F,MAAK2S,SAAS5M,EAAE/F,MAAMqP,UAAS,EAAGC,cAAa,GAAI7O,QAAQ0D,MAAM,WAAW,MAAOnE,MAAKyS,MAAMpD,UAAS,EAAGC,cAAa,GAAIjN,MAAM8B,MAAM,WAAW,MAAOnE,MAAK8S,KAAK,SAAS/M,EAAEiI,GAAGhO,KAAKU,KAAKsN,SAASqB,UAAS,EAAGC,cAAa,GAAIyD,QAAQ5O,MAAM,WAAW,MAAOnE,MAAK8S,KAAK,SAAS/M,GAAG/F,KAAKU,KAAKqF,SAASsJ,UAAS,EAAGC,cAAa,GAAIwD,MAAM3O,MAAM,SAAS4B,EAAEiI,GAAGpK,UAAU,IAAIoK,EAAEhO,KAAM,KAAI,GAAIQ,GAAE,EAAEyN,EAAEjO,KAAKuS,KAAKC,MAAMvE,IAAIjO,KAAKqS,MAAMtM,EAAEvG,KAAKwO,EAAEC,EAAE9L,IAAI8L,EAAEuB,IAAIhP,KAAKyN,EAAEA,EAAEuE,KAAM,OAAOxE,IAAGqB,UAAS,EAAGC,cAAa,GAAI0D,KAAK7O,MAAM,SAAS4B,GAAG,GAAIiI,GAAEhO,KAAKoS,OAAOrM,EAAG,OAAO,UAASiI,GAAGqB,UAAS,EAAGC,cAAa,GAAI2D,MAAM9O,MAAM,SAAS4B,GAAG,GAAIiI,GAAEhO,KAAKoS,OAAOrM,EAAG,OAAO,UAASiI,EAAE,OAAOA,EAAEkF,QAAQC,KAAKC,UAAWpT,MAAK6P,IAAI7B,EAAEwB,KAAKxB,EAAE7L,KAAKkN,UAAS,EAAGC,cAAa,GAAI+D,OAAOlP,MAAM,SAAS4B,GAAG,GAAIiI,GAAEhO,KAAKoS,OAAOrM,EAAG,IAAG,SAASiI,EAAE,KAAM,IAAI9M,OAAM,sBAAuB,OAAOlB,MAAKsT,SAAStF,GAAGhO,MAAMqP,UAAS,EAAGC,cAAa,GAAInJ,KAAKhC,MAAM,SAAS4B,GAAG,GAAIiI,GAAEhO,KAAKoS,OAAOrM,EAAG,OAAO,UAASiI,EAAE,OAAOA,EAAEkF,QAAQC,KAAKC,UAAWpT,MAAK6P,IAAI7B,EAAEwB,MAAMxP,KAAKsT,SAAStF,GAAGA,EAAE7L,MAAMkN,UAAS,EAAGC,cAAa,GAAIjI,KAAKlD,MAAM,SAAS4B,EAAEiI,EAAExN,GAAGoD,UAAUnD,OAAO,IAAID,EAAE,EAAE,GAAGA,GAAG2S,KAAKC,KAAM,IAAInF,GAAEjO,KAAKoS,OAAOrM,EAAG,IAAG,SAASkI,EAAEA,GAAGuE,MAAM,KAAKF,MAAM,KAAK9C,IAAIzJ,EAAE5D,IAAI6L,EAAEkF,QAAQ1S,GAAGR,KAAKoS,OAAOrM,GAAGkI,EAAEjO,KAAKuT,QAAQtF,GAAGjO,KAAKyS,OAAOzS,KAAK4S,aAAa,CAAC,GAAIjT,GAAEsO,EAAE9L,GAAI8L,GAAE9L,IAAI6L,EAAEhO,KAAKsT,SAASrF,GAAGjO,KAAK2S,SAASnT,KAAK,OAAOyO,EAAEuB,IAAI7P,EAAE,OAAO,MAAOK,OAAMqP,UAAS,EAAGC,cAAa,GAAIO,KAAK1L,MAAM,SAAS4B,GAAG,GAAIiI,GAAEhO,KAAKoS,OAAOrM,EAAG,IAAG,SAASiI,EAAE,KAAM,IAAI9M,OAAM,oBAAqB,cAAclB,MAAKoS,OAAOrM,GAAG/F,KAAKwT,QAAQxF,GAAGhO,KAAKyS,OAAOzS,KAAK2S,SAASnT,KAAK,OAAOuG,EAAEiI,EAAE7L,IAAI,OAAOnC,MAAMqP,UAAS,EAAGC,cAAa,GAAImE,OAAOtP,MAAM,WAAW,KAAKnE,KAAKyS,KAAK,GAAGzS,KAAK6P,IAAI7P,KAAKqS,KAAKC,MAAM9C,IAAK,OAAOxP,OAAMqP,UAAS,EAAGC,cAAa,GAAIsD,QAAQzO,MAAM,WAAW,KAAKnE,KAAKyS,KAAKzS,KAAK0S,MAAM1S,KAAK6P,IAAI7P,KAAKqS,KAAKC,MAAM9C,MAAMH,UAAS,EAAGC,cAAa,GAAIgE,UAAUnP,MAAM,SAAS4B,GAAG/F,KAAKwT,QAAQzN,GAAG/F,KAAKuT,QAAQxN,IAAIsJ,UAAS,EAAGC,cAAa,GAAIkE,SAASrP,MAAM,SAAS4B,GAAGA,EAAEyM,MAAMF,MAAMvM,EAAEuM,MAAMvM,EAAEuM,MAAME,MAAMzM,EAAEyM,MAAMzM,EAAEyM,MAAM,KAAKzM,EAAEuM,MAAM,MAAMjD,UAAS,EAAGC,cAAa,GAAIiE,SAASpP,MAAM,SAAS4B,GAAGA,EAAEyM,MAAMxS,KAAKuS,KAAKC,MAAMzM,EAAEuM,MAAMtS,KAAKuS,KAAKxM,EAAEuM,MAAME,MAAMzM,EAAEA,EAAEyM,MAAMF,MAAMvM,GAAGsJ,UAAS,EAAGC,cAAa,KAAMvJ,IAAK+F,GAAOC,QAAQ3F,YAC9zF,IAAI;;;;;CFDd,SAAUsF,EAAM5K,EAAM6K,GAGG,kBAAXC,SAA+C,mBAAfA,QAAOC,IAE9CD,OAAO9K,EAAM,WAAc,MAAO6K,GAAQD,KACnB,gBAAXI,SAAiD,gBAAnBA,QAAOC,QAEjDD,OAAOC,QAAUJ,EAAQD,GAGzBA,EAAK5K,GAAQ6K,EAAQD,IAER,mBAAXM,QAAyBA,OAEd,mBAAXC,QAAyBA,OAASjM,KAAQ,UAAW,WAE3D,GAAIgD,KAGJA,GAAQkJ,QAAU,SAAkBxI,EAAMC,EAAQF,EAAQ0I,GACtD,MAAO,YACH,MAAOA,GAAQvE,KAAKwE,UAAU5M,KAAK,KAAMkE,IAAQC,IAAUF,IAAUG,aAK7EZ,EAAQqJ,WAAa,SAAU3I,EAAMC,EAAQF,EAAQJ,GACjD,MAAO,UAAUrB,EAAOsK,EAAMjD,GAC1B,GAAuB,gBAATiD,MACLA,YAAgBjN,QACrB,KAAM,IAAIgE,GAAY,oDACViJ,GAAO,QAAS7I,IAAUC,IAAQC,IAClD,IAAoB,mBAAT0F,GAAsB,CACT,gBAATA,KACPA,GAASA,GACb,IAAI5D,KACU,QAAVzD,GACAyD,EAAO/E,KAAKsB,EAChB,KAAK,GAAIxB,GAAI,EAAGA,EAAI8L,EAAK7L,OAAQD,IAC7B,IAAK,GAAI+L,GAAI,EAAGA,EAAIlD,EAAK5I,OAAQ8L,IAC7B9G,EAAO/E,KAAK4L,EAAK9L,GAAG6I,EAAKkD,IAEjC,OAAO9G,GAKP,MAFc,QAAVzD,GACAsK,EAAKlM,QAAQ4B,GACVsK,GAMnB,IAAIE,GAAU,SAAUC,EAAKC,GACzB,GAAIpI,GAAImI,EAAIhM,OACRkM,EAAID,EAAI,EAAY,GAAJC,IAAOA,EAAI,EAC/B,IAAI5G,GAAI2G,EAAI,EAAQ3G,GAAIzB,IAAGyB,EAAIzB,EAC/B,IAAIsI,GAAM,SAAUC,GAChB,MAAOA,GAAGC,WAAW,GAAGC,SAAS,IAAIlK,eAErCmK,EAAU,SAAUP,EAAKhL,EAAKgB,GAC9B,MAAOgK,GAAIlK,OAAOd,EAAKgB,GAClB8F,QAAQ,MAAS,QACjBA,QAAQ,QAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,MAAS,OACjBA,QAAQ,2BAA4B,SAASsE,GAAM,MAAO,OAASD,EAAIC,KACvEtE,QAAQ,wBAA4B,SAASsE,GAAM,MAAO,MAASD,EAAIC,KACvEtE,QAAQ,mBAA4B,SAASsE,GAAM,MAAO,OAASD,EAAIC,KACvEtE,QAAQ,mBAA4B,SAASsE,GAAM,MAAO,MAASD,EAAIC,KAEhF,QACII,OAAQD,EAAQP,EAAKE,EAAGD,EAAIC,GAC5BO,MAAQF,EAAQP,EAAKC,EAAG,GACxBS,OAAQH,EAAQP,EAAKC,EAAI,EAAG3G,GAAK2G,EAAI,KAoE7C,OA/DA1J,GAAQoK,MAAQ,SAAUC,EAAQZ,EAAKN,GACnC,GAAsB,gBAAXkB,GACP,KAAM,IAAInM,OAAM,wCACpB,IAA4B,kBAAjBmM,GAAOD,MACd,KAAM,IAAIlM,OAAM,8CACpB,IAAmB,gBAARuL,GACP,KAAM,IAAIvL,OAAM,oCACpB,IAAuB,mBAAZiL,IAA8C,gBAAZA,GACzC,KAAM,IAAIjL,OAAM,kCACG,oBAAZiL,KACPA,KACJ,IAAI1G,IAAWlB,IAAK,KAAM+I,MAAO,KACjC,KACI,GAAIpB,EAEAA,GAD2B,kBAApBC,GAAQD,QACLC,EAAQD,QAER,SAAUxI,EAAMC,EAAQF,EAAQxC,GACtC,OAASyC,KAAMA,EAAMC,OAAQA,EAAQF,OAAQA,EAAQxC,KAAMA,GAGnE,IAAIsM,IACA3F,MACIyE,WAAYrJ,EAAQqJ,WACpBH,QAAYlJ,EAAQkJ,QACpBE,UAAYF,GAGa,iBAAtBC,GAAQqB,YACfD,EAAKC,UAAYrB,EAAQqB,WAC7B/H,EAAOlB,IAAM8I,EAAOD,MAAMX,EAAKc,GAC/B9H,EAAO6H,MAAQ,KAEnB,MAAOvH,GACHN,EAAOlB,IAAM,IACb,IAAIkJ,GAAgB,SAAUtJ,EAAOuJ,GACjC,MAAyB,mBAAVvJ,GAAwBA,EAAQuJ,EAEnDjI,GAAO6H,OACH5J,KAAU+J,EAAc1H,EAAErC,KAAM,GAChCC,OAAU8J,EAAc1H,EAAEpC,OAAQ,GAClCL,QAAUyC,EAAEzC,QACZE,MAAUiK,EAAc1H,EAAEvC,MAAO,IACjCD,SAAUkK,EAAc1H,EAAExC,SAAU,IACpCoK,SAAUnB,EAAQC,EAAKgB,EAAc1H,EAAEtC,OAAQ,KAGvD,MAAOgC,IAIXzC,EAAQ4K,aAAe,SAAU7H,EAAG8H,GAIhC,IAAK,GAHDvJ,GAAIyB,EAAE4H,SACN3F,EAAU,QAAUjC,EAAErC,KAAO,YAAcqC,EAAEpC,OAAS,MACtDsE,EAAU,GACLzH,EAAI,EAAGA,EAAIwH,EAAQvH,OAAS6D,EAAE2I,OAAOxM,OAAQD,IAClDyH,GAAW,GACf,IAAI6F,GAAM9F,EAAU1D,EAAE2I,OAAS3I,EAAE4I,MAAQ5I,EAAE6I,OAAS,KAChDlF,EAAU,MACVlC,EAAEzC,SAAWuK,EAAiB,GAAK,KACvC,OAAOC,IAGJ9K;;;;YLlJX,IAAIgD,kBACAtH,MAAM,SAACC,GACH,MAC4B,gBAAdA,IACc,iBAAdA,GAAKsH,MAGvBlH,cAAc,SAACJ,GACX,MAAOA,GAAK+C,UAEhBzC,cAAc,SAACN,GACX,MAAOA,GAAKoG,UAEhB5F,YAAY,SAACR,GACT,MAAOA,GAAK0C,QAEhBjC,iBAAiB,SAACT,GACd,MAAOA,GAAKuH,SAEhBtG,iBAAiB,SAACjB,EAAMkB,GACpB,MAAOlB,GAAKwH,IAAItG,oBAITmG;;YFtBf,IAAInB,oBACAnG,MAAM,SAACC,GACH,MAC4B,gBAAdA,IACc,gBAAdA,GAAK0C,MACS,gBAAd1C,GAAKmG,KAGvB/F,cAAc,WACV,KAAM,IAAImC,OAAM,oEAEpBjC,cAAc,SAACN,cACPoG,IACJ,KAAK,GAAIC,KAASrG,GACPA,EAAKsG,eAAeD,IACpBhF,KAAKtB,MAAMC,EAAKqG,IACnBD,EAAOrE,KAAK/B,GACJA,EAAKsG,eAAeD,IACG,gBAAhBrG,GAAKqG,IACZrG,EAAKqG,YAAkB3F,QAC/BV,EAAKqG,GAAOE,QAAQ,SAACvG,GACbwG,EAAKzG,MAAMC,IACZoG,EAAOrE,KAAK/B,IAI3B,OAAOoG,IAEX5F,YAAY,SAACR,GACT,MAAOA,GAAK0C,MAEhBjC,iBAAiB,SAACT,GACd,GAAIyG,KACJ,KAAK,GAAIJ,KAASrG,GACPA,EAAKsG,eAAeD,IACG,gBAAhBrG,GAAKqG,IACF,SAAVA,GACU,QAAVA,GACHI,EAAM1E,KAAKsE,EACnB,OAAOI,IAEXxF,iBAAiB,SAACjB,EAAMkB,GACpB,MAAOlB,GAAKsG,eAAepF,IACE,gBAAflB,GAAKkB,IACH,SAATA,GACS,QAATA,EACIlB,EAAKkB,GAELS,wBAIJuE;;YLtDf,IAAIpG,oBACAC,MAAM,SAACC,GAEH,MACuB,gBAATC,OACPD,YAAgBC,OACA,gBAATD,IACkB,gBAAlBA,GAAKE,UACa,gBAAlBF,GAAKG,UAGvBC,cAAc,SAACJ,GACX,MAAOA,GAAKK,YAEhBC,cAAc,SAACN,GACX,MAAOA,GAAKO,YAEhBC,YAAY,SAACR,GACT,MAAOA,GAAKG,UAEhBM,iBAAiB,SAACT,GACd,MAAOU,OAAMC,UAAUC,MAAMC,KAAKb,EAAKc,WAAY,GAC9CC,IAAI,SAACC,SAAMA,GAAEb,YAEtBc,iBAAiB,SAACjB,EAAMkB,GACpB,MAAOlB,GAAKmB,aAAaD,oBAIlBpB;;8OC7BMsB,YAAW,WAChB,QADKA,KAGb,4BAHaA,GAEbC,KAAKC,aACED,iCAHMD,EAAW,MAK5BG,gBAAS,SAACC,GAEN,MADAH,MAAKC,UAAUG,QAAQD,GAChBH,mCAEXK,kBAAW,SAACF,GACR,GAAgBG,SAAZH,EACAH,KAAKC,iBACJ,CAED,IAAK,GADDM,MACKC,EAAI,EAAGA,EAAIR,KAAKC,UAAUQ,OAAQD,IACnCR,KAAKC,UAAUO,KAAOL,GACtBI,EAASG,KAAKV,KAAKC,UAAUO,GAAGR,MACnCC,UAAYM,EAErB,MAAOP,oCAEXW,cAAO,SAAChC,GACJ,IAAK,GAAI6B,GAAI,EAAGA,EAAIR,KAAKC,UAAUQ,OAAQD,IACvC,GAAIR,KAAKC,UAAUO,GAAG9B,MAAMC,GACxB,MAAOqB,MAAKC,UAAUO,EAC9B,OAAOF,wCAzBMP,oBAAAA;;YEArB,IAAIqB,WAEAC,KAAQ,SAACC,EAAGC,GACR,MAAOD,GAAEnC,YAAYoC,IAIzBC,MAAS,SAACF,EAAGC,GAGT,IAFA,GAAIC,GAAQ,EACR7C,EAAO4C,EAC+B,QAAlC5C,EAAO2C,EAAEvC,cAAcJ,KAC3B6C,GACJ,OAAOA,IAIXC,IAAO,SAACH,EAAGC,GACP,GAAIG,GAASJ,EAAEvC,cAAcwC,EAC7B,IAAe,OAAXG,EACA,MAAO,EAEX,KAAK,GADDC,GAAUL,EAAErC,cAAcyC,GACrBlB,EAAI,EAAGA,EAAImB,EAAQlB,OAAQD,IAChC,GAAImB,EAAQnB,KAAOe,EACf,MAAQf,GAAI,CAAE,MAChB,IAAIU,OAAM,uBAIpBU,IAAO,SAACN,EAAGC,EAAGM,GACVA,EAAMC,SAASD,EAAK,GACpB,IAAIH,GAASJ,EAAEvC,cAAcwC,EAC7B,IAAe,OAAXG,EAAiB,CACjB,GAAIK,GAAUT,EAAErC,cAAcyC,EACpB,GAANG,IACAA,EAAME,GAAWF,EAAM,GAC3B,KAAK,GAAIrB,GAAI,EAAGA,EAAIuB,EAAQtB,OAAQD,IAChC,GAAIuB,EAAQvB,KAAOe,EACf,MAAQf,GAAK,IAAOqB,CAC5B,QAAO,EAEN,MAAY,KAARA,GACE,GAEA,GAIfG,MAAS,SAACV,EAAGC,GACT,MAAOH,UAASQ,IAAIN,EAAGC,EAAG,IAI9BU,KAAQ,SAACX,EAAGC,GACR,MAAOH,UAASQ,IAAIN,EAAGC,EAAG,KAI9BW,MAAS,SAACZ,EAAGC,EAAGY,GACZ,MAAmB,gBAARA,IAAoBA,YAAe9C,OACnC8C,EAAI1B,OACS,gBAAR0B,GACLC,OAAOC,KAAKF,GAAK1B,OACJ,gBAAR0B,GACLA,EAAI1B,OAEJ6B,OAAOH,GAAK1B,QAI3B8B,OAAU,SAACjB,EAAGC,EAAGiB,EAAKf,EAAKgB,GACvB,MAAOH,QAAOE,GAAKD,OAAOd,EAAKgB,IAInCC,GAAM,SAACpB,EAAGC,EAAGiB,GACT,MAAOF,QAAOE,GAAKG,eAIvBC,GAAM,SAACtB,EAAGC,EAAGiB,GACT,MAAOF,QAAOE,GAAKK,+BAIZzB;;8ODpFMR,UAAS,WACd,QADKA,KAGb,4BAHaA,GAEbZ,KAAKa,UACEb,iCAHMY,EAAS,MAK1BV,gBAAS,SAACY,EAAMC,GACZf,KAAKa,OAAOC,GAAQC,gCAExBC,WAAI,SAACF,EAAMG,GACP,GAAIF,GAAOf,KAAKa,OAAOC,EACvB,IAAoB,kBAATC,GACP,KAAM,IAAIG,OAAM,qBAAwBJ,EAAO,IACnD,OAAOC,GAAKI,MAAM,KAAMF,mCAZXL,oBAAAA;;okBSAdgH,KAAIvB,gBAAAtD,QAAgB,mBACpB8E,eAAcxB,gBAAAtD,QAAM,0BAENyF,cAAa,SAASX,GAC3B,QADKW,GACJrI,EAASoH,EAAQkB,EAAOrB,wBADpBoB,GAEbxI,KAAKG,QAAUA,EACfH,KAAKuH,OAAUA,EACfvH,KAAKyI,MAAUA,EACfzI,KAAKoH,MAAUA,mBALFoB,EAAsBX,wBAAtBW,EAAa,MAQ9BE,iBAAU,SAACX,EAAGxG,aACVvB,MAAKkI,WAAWH,EAAGxG,EACnB,IAAIoH,KAKJ,OAJAZ,GAAEhD,SAASG,QAAQ,SAAC6C,GAChBY,EAASA,EAAOC,OAAOzD,EAAK0D,SAASd,EAAGxG,MAE5CvB,KAAKsI,SAASP,EAAGxG,EAAGoH,GACbA,gCAGXE,gBAAS,SAACd,EAAGxG,aACTvB,MAAKkI,WAAWH,EAAGxG,EACnB,IAAIuH,IAAUvH,EASd,OARAwG,GAAEhD,SAASG,QAAQ,SAAC6C,GAChB,GAAIY,KACJG,GAAM5D,QAAQ,SAAC3D,GACXoH,EAASA,EAAOC,OAAOzD,EAAK4D,SAAShB,EAAGxG,MAE5CuH,EAAQH,IAEZ3I,KAAKsI,SAASP,EAAGxG,EAAGuH,GACbA,gCAGXC,gBAAS,SAAChB,EAAGxG,aACTvB,MAAKkI,WAAWH,EAAGxG,EAGnB,IAAIwD,GAASgD,EAAEhD,SACXiE,EAAS,KACTC,EAAS,KACTC,EAAS,KACT1I,EAAI,CAOR,IANIA,EAAIuE,EAAOtE,QAA+B,SAArBsE,EAAOvE,GAAGa,SAC/B2H,EAAOjE,EAAOvE,MACdA,EAAIuE,EAAOtE,QAA+B,UAArBsE,EAAOvE,GAAGa,SAC/B4H,EAAQlE,EAAOvE,MACfA,EAAIuE,EAAOtE,QAA+B,WAArBsE,EAAOvE,GAAGa,SAC/B6H,EAASnE,EAAOvE,MACN,OAAVyI,EACA,KAAM,IAAI/H,OAAM,iCAEpB,IAAI4H,MAGAK,EAAKF,EAAM9C,IAAI,MACfiD,EAAe,SAAC7H,GAChB,GAAIF,GAAO8D,EAAKhF,QAAQhB,YAAYoC,EACpC,IAAW,MAAP4H,GAAcA,IAAO9H,EAAM,CAC3B,GAAIgI,IAAO,CACI,QAAXH,IACK/D,EAAKmE,WAAWJ,EAAQ3H,KACzB8H,GAAO,IACXA,GACAP,EAAMpI,KAAKa,IAKvB,IAAa,OAATyH,EAAe,CACf,GAAIO,GAAKP,EAAK7C,IAAI,KAClB,IAAW,MAAPoD,EAEAvJ,KAAKG,QAAQlB,cAAcsC,GAAG2D,QAAQ,SAAC3D,SAAM6H,GAAa7H,SAEzD,IAAW,OAAPgI,cAEL,GAAIC,GAAO,SAACjI,GACR6H,EAAa7H,GACb4D,EAAKhF,QAAQlB,cAAcsC,GAAG2D,QAAQ,SAAC3D,SAAMiI,GAAKjI,KAEtD4D,GAAKhF,QAAQlB,cAAcsC,GAAG2D,QAAQ,SAAC3D,SAAMiI,GAAKjI,YAEjD,IAAW,OAAPgI,EAAa,CAElB,GAAIE,GAASzJ,KAAKG,QAAQpB,cAAcwC,EACxC,IAAe,OAAXkI,EAAiB,CAGjB,IAAK,GAFD9H,GAAU3B,KAAKG,QAAQlB,cAAcwK,GACrCC,EAAc,KACTC,EAAI,EAAGA,EAAIhI,EAAQlB,QACpBkB,EAAQgI,KAAOpI,EADaoI,IAGhCD,EAAc/H,EAAQgI,EAE1BP,GAAaM,QAGhB,IAAW,QAAPH,EAAc,CAEnB,GAAIK,GAAS5J,KAAKG,QAAQpB,cAAcwC,EACxC,IAAe,OAAXqI,EAEA,IAAK,GADDjI,GAAU3B,KAAKG,QAAQlB,cAAc2K,GAChCC,EAAI,EAAGA,EAAIlI,EAAQlB,QACpBkB,EAAQkI,KAAOtI,EADasI,IAGhCT,EAAazH,EAAQkI,QAI5B,IAAW,OAAPN,EAAa,CAElB,GAAIO,GAAS9J,KAAKG,QAAQpB,cAAcwC,EACxC,IAAe,OAAXuI,EAAiB,CACjB,GAAInI,GAAU3B,KAAKG,QAAQlB,cAAc6K,GACrCC,EAACzJ,MACL,KAAKyJ,EAAI,EAAGA,EAAIpI,EAAQlB,QAChBkB,EAAQoI,KAAOxI,EADSwI,KAG5BA,EAAIpI,EAAQlB,SACZsJ,IACAX,EAAazH,EAAQoI,UAI5B,IAAW,QAAPR,EAAc,CAEnB,GAAIS,GAAShK,KAAKG,QAAQpB,cAAcwC,EACxC,IAAe,OAAXyI,EAAiB,CACjB,GAAIrI,GAAU3B,KAAKG,QAAQlB,cAAc+K,GACrCC,EAAC3J,MACL,KAAK2J,EAAI,EAAGA,EAAItI,EAAQlB,QAChBkB,EAAQsI,KAAO1I,EADS0I,KAGhC,GAAIA,EAAItI,EAAQlB,OAEZ,IADAwJ,IACOA,EAAItI,EAAQlB,QACf2I,EAAazH,EAAQsI,WAIhC,IAAW,QAAPV,EAAc,CAEnB,GAAIW,GAASlK,KAAKG,QAAQpB,cAAcwC,EACzB,QAAX2I,GACAd,EAAac,OAEhB,IAAW,SAAPX,EAGL,IADA,GAAI5K,GAAO4C,IACE,CACT,GAAI4I,GAASnK,KAAKG,QAAQpB,cAAcJ,EACxC,IAAe,OAAXwL,EACA,KACJf,GAAae,GACbxL,EAAOwL,OAMff,GAAa7H,EAGjB,OADAvB,MAAKsI,SAASP,EAAGxG,EAAGuH,GACbA,gCAGXQ,kBAAW,SAACvB,EAAGxG,GACXvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAI6I,GAAOrC,EAAEhD,SAAS,GAClBU,EAASzF,KAAKqK,SAASD,EAAM7I,EAGjC,OAFAkE,GAASmC,KAAKpC,OAAOC,GACrBzF,KAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGX4E,gBAAS,SAACtC,EAAGxG,GACT,OAAQwG,EAAE1G,QACN,IAAK,oBAAsB,MAAOrB,MAAKsK,0BAA0BvC,EAAGxG,EACpE,KAAK,qBAAsB,MAAOvB,MAAKuK,2BAA2BxC,EAAGxG,EACrE,KAAK,UAAsB,MAAOvB,MAAKwK,gBAAgBzC,EAAGxG,EAC1D,KAAK,UAAsB,MAAOvB,MAAKyK,gBAAgB1C,EAAGxG,EAC1D,KAAK,aAAsB,MAAOvB,MAAK0K,mBAAmB3C,EAAGxG,EAC7D,KAAK,eAAsB,MAAOvB,MAAK2K,qBAAqB5C,EAAGxG,EAC/D,KAAK,QAAsB,MAAOvB,MAAK4K,cAAc7C,EAAGxG,EACxD,KAAK,WAAsB,MAAOvB,MAAK6K,iBAAiB9C,EAAGxG,EAC3D,KAAK,YAAsB,MAAOvB,MAAK8K,kBAAkB/C,EAAGxG,EAC5D,KAAK,QAAsB,MAAOvB,MAAK+K,cAAchD,EAAGxG,EACxD,KAAK,gBAAsB,MAAOvB,MAAKgL,sBAAsBjD,EAAGxG,EAChE,KAAK,gBAAsB,MAAOvB,MAAKiL,sBAAsBlD,EAAGxG,EAChE,KAAK,gBAAsB,MAAOvB,MAAKkL,sBAAsBnD,EAAGxG,EAChE,KAAK,eAAsB,MAAOvB,MAAKmL,qBAAqBpD,EAAGxG,EAC/D,KAAK,OAAsB,MAAOvB,MAAKoL,aAAarD,EAAGxG,kCAI/D+I,iCAA0B,SAACvC,EAAGxG,GAC1BvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASzF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,EAI1C,OAHKqG,MAAKpC,OAAOC,KACbA,EAASzF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,IAC1CvB,KAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGX8E,kCAA2B,SAACxC,EAAGxG,GAC3BvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASzF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,EAM1C,OAJIkE,GADAmC,KAAKpC,OAAOC,GACHzF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAE7BvB,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAC1CvB,KAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGX+E,uBAAgB,SAACzC,EAAGxG,GAChBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,IAAS,CACb,QAAQsC,EAAE5B,IAAI,OACV,IAAK,KACDV,EAASmC,KAAKpC,OAAOxF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,IAC9CkE,IACAA,EAASA,GAAUmC,KAAKpC,OAAOxF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,IAChE,MACJ,KAAK,KACDkE,EAASmC,KAAKpC,OAAOxF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,IAC7CkE,IACDA,EAASA,GAAUmC,KAAKpC,OAAOxF,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,KAIxE,MADAvB,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXgF,uBAAgB,SAAC1C,EAAGxG,GAChBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAI8J,GAAKzD,KAAKjC,OAAO3F,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAAI,UAClD+J,EAAK1D,KAAKjC,OAAO3F,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAAI,UAClDkE,EAAMnF,MACV,QAAQyH,EAAE5B,IAAI,OACV,IAAK,IAAMV,EAAS4F,EAAMC,CAAG,MAC7B,KAAK,IAAM7F,EAAS4F,EAAMC,CAAI,MAC9B,KAAK,KAAM7F,EAAS4F,GAAMC,CAAG,MAC7B,KAAK,KAAM7F,EAAS4F,GAAMC,EAG9B,MADAtL,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXiF,0BAAmB,SAAC3C,EAAGxG,GACnBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAI8J,GAAKrL,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAClC+J,EAAKtL,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAClCkE,EAAMnF,MACV,QAAQyH,EAAE5B,IAAI,OACV,IAAK,KAAMV,EAAS4F,IAAOC,CAAG,MAC9B,KAAK,KAAM7F,EAAS4F,IAAOC,CAAI,MAC/B,KAAK,KAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,WAAazD,KAAKjC,OAAO2F,EAAI,SAAW,MAC5E,KAAK,KAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,WAAazD,KAAKjC,OAAO2F,EAAI,SAAU,MAC3E,KAAK,IAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,UAAazD,KAAKjC,OAAO2F,EAAI,SAAW,MAC5E,KAAK,IAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,UAAazD,KAAKjC,OAAO2F,EAAI,SAAW,MAC5E,KAAK,KAAM7F,EAAwE,OAA/DmC,KAAKjC,OAAO0F,EAAI,UAAUpC,MAAMrB,KAAKjC,OAAO2F,EAAI,UAAqB,MACzF,KAAK,KAAM7F,EAAwE,OAA/DmC,KAAKjC,OAAO0F,EAAI,UAAUpC,MAAMrB,KAAKjC,OAAO2F,EAAI,WAGxE,MADAtL,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXkF,4BAAqB,SAAC5C,EAAGxG,GACrBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAI8J,GAAKrL,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAClC+J,EAAKtL,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GAClCkE,EAAMnF,MACV,QAAQyH,EAAE5B,IAAI,OACV,IAAK,IAEGV,EADc,gBAAP4F,GACEA,EAAKzD,KAAKjC,OAAO2F,EAAI,UAErB1D,KAAKjC,OAAO0F,EAAI,UAAYzD,KAAKjC,OAAO2F,EAAI,SACzD,MACJ,KAAK,IAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,UAAYzD,KAAKjC,OAAO2F,EAAI,SAAU,MAC1E,KAAK,IAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,UAAYzD,KAAKjC,OAAO2F,EAAI,SAAW,MAC3E,KAAK,IAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,UAAYzD,KAAKjC,OAAO2F,EAAI,SAAW,MAC3E,KAAK,IAAM7F,EAASmC,KAAKjC,OAAO0F,EAAI,UAAYzD,KAAKjC,OAAO2F,EAAI,SAAU,MAC1E,KAAK,KAAM7F,EAAS8F,KAAKC,IAAI5D,KAAKjC,OAAO0F,EAAI,UAAWzD,KAAKjC,OAAO2F,EAAI,WAG5E,MADAtL,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXmF,qBAAc,SAAC7C,EAAGxG,GACdvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkK,GAAIzL,KAAKqK,SAAStC,EAAEhD,SAAS,GAAIxD,GACjCkE,EAAMnF,MAEV,QAAQyH,EAAE5B,IAAI,OACV,IAAK,IAAKV,GAAUmC,KAAKjC,OAAO8F,EAAG,UAAW,MAC9C,KAAK,IAAKhG,GAAUmC,KAAKjC,OAAO8F,EAAG,UAIvC,MADAzL,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXoF,wBAAiB,SAAC9C,EAAGxG,aACjBvB,MAAKkI,WAAWH,EAAGxG,EACnB,IAAI4H,GAAKpB,EAAE5B,IAAI,MACXlF,GAASjB,KAAKG,QAASoB,EAC3BwG,GAAEhD,SAASG,QAAQ,SAAC6C,GAChB9G,EAAKP,KAAKyE,EAAKkF,SAAStC,EAAGxG,KAE/B,IAAIkE,GAASzF,KAAKyI,MAAMzH,IAAImI,EAAIlI,EAEhC,OADAjB,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXqF,yBAAkB,SAAC/C,EAAGxG,GAClBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAI4H,GAAKpB,EAAE5B,IAAI,MACXV,EAASzF,KAAKG,QAAQP,iBAAiB2B,EAAG4H,EAE9C,OADAnJ,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXsF,qBAAc,SAAChD,EAAGxG,GACdvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAI4H,GAAKpB,EAAE5B,IAAI,KACf,IAA+B,mBAApBnG,MAAKuH,OAAO4B,GACnB,KAAM,IAAIjI,OAAM,sBAAyBiI,EAAK,IAClD,IAAI1D,GAASzF,KAAKuH,OAAO4B,EAEzB,OADAnJ,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXuF,6BAAsB,SAACjD,EAAGxG,GACtBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASsC,EAAE5B,IAAI,QAEnB,OADAnG,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXwF,6BAAsB,SAAClD,EAAGxG,GACtBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASsC,EAAE5B,IAAI,QAEnB,OADAnG,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGXyF,6BAAsB,SAACnD,EAAGxG,GACtBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASsC,EAAE5B,IAAI,QAEnB,OADAnG,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGX0F,4BAAqB,SAACpD,EAAGxG,GACrBvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASsC,EAAE5B,IAAI,QAEnB,OADAnG,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,gCAGX2F,oBAAa,SAACrD,EAAGxG,GACbvB,KAAKkI,WAAWH,EAAGxG,EACnB,IAAIkE,GAASzF,KAAK6I,SAASd,EAAGxG,EAE9B,OADAvB,MAAKsI,SAASP,EAAGxG,EAAGkE,GACbA,kCA5WM+C,GAAsBX,+BAAtBW;;iTDHdZ,KAAIvB,gBAAAtD,QAAM,mBAEI8E,eAAc,mBAAdA,0BAAAA,+BAAAA,EAAc,MAE/BC,gBAAS,SAACC,EAAGxG,GAGT,IAFA,GAAIC,GAAQ,EACR7C,EAAOoJ,EACuB,QAA1BpJ,EAAOA,EAAK+C,WAChBF,GACJ,IAAIwG,GAAUJ,KAAKtC,IAAI,GAAI,EAAI9D,EAG/B,KAFAA,EAAQ,EACR7C,EAAO4C,EAC8C,QAA7C5C,EAAOqB,KAAKG,QAAQpB,cAAcJ,KACtC6C,GACJ,IAAIyG,GAAUL,KAAKtC,IAAI,GAAI,EAAI9D,EAC/B,QAASwG,QAAAA,EAASC,QAAAA,iCAItBC,kBAAW,SAACH,EAAGxG,GACX,GAAKvB,KAAKoH,MAAV,OAE2BpH,KAAK8H,SAASC,EAAGxG,GAAtCyG,EAAOG,EAAPH,QAASC,EAAOE,EAAPF,OACfG,SAAQC,IAAI,oBACRT,KAAKtC,IAAI0C,EAAUD,EAAE1G,OAAS,KAAM,KAAO,MAC3C4G,EAAUjI,KAAKG,QAAQhB,YAAYoC,mCAI3C+G,gBAAS,SAACP,EAAGxG,EAAGY,aACZ,IAAKnC,KAAKoH,MAAV,OAE2BpH,KAAK8H,SAASC,EAAGxG,GAAtCyG,EAAOG,EAAPH,QAASC,EAAOE,EAAPF,QACXxC,EAAMnF,MACEA,UAAR6B,EACAsD,EAAS,YACW,gBAARtD,IAAoBA,YAAe9C,QAC/CoG,EAAS,IACTtD,EAAI+C,QAAQ,SAACvG,GACT8G,GAAU,QAAUN,EAAKhF,QAAQhB,YAAYR,GAAQ,OAEzD8G,EAASA,EAAO8C,QAAQ,KAAM,IAAM,KAGpC9C,QAAgBtD,GAAM,IAAMA,EAAM,IAClCsD,EAAOhF,OAAS,KAChBgF,EAASA,EAAOlD,OAAO,EAAG,IAAM,OACpC6F,QAAQC,IAAI,oBACRT,KAAKtC,IAAI0C,EAAU,MAAQvC,EAAQ,KAAO,MAC1CwC,EAAUjI,KAAKG,QAAQhB,YAAYoC,qCA/C1BsG,oBAAAA;;iTNEjB/E,KAAWC,QAAQ,QAEnBC,QAAWD,QAAQ,cAGnBE,eAAiB,WAUL,QAAAC,GAACC,EAAQzB,iCAFKyB,0BAGtBA,EAAA7D,UAAY,GAAI8D,WAInBC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,kCAGD3D,KAAAwD,MAAOA,wCAACG,EACJ3D,KAAAc,KAAI,w0pBASF8C,UAAAnD,OAAA,EAAAmD,UAAA,MAIFC,KAKAC,GAAWC,MAAAC,KACdA,oBAGG,MAAAC,UACAC,GAAA7C,KAAO,UAAa8C,MAAE,IAAAC,YAAA,UACzB,SAAAC,EAAAC,uDAGM,MAAAC,IAAA,QAAAC,IAAAC,GAAAJ,EAAAC,EAAA,yBAACI,EAAAC,EAAAN,GACA,MACAE,IAAA,QAAYC,IAAAE,EAAAC,EAAAN,IAGhBO,IAAAvD,KAAS,QAAC+C,YAAoB,WACjC,8KA5CgB,oEAAA/C,KAAS,UAAA8C,MAAA,MAAAC,YAAA,k7OAiBlBlB,GAAAG,EAAOnC;;8OElCEmE,SAAQ,mBAARA,0BAAAA,+BAAAA,GAEVC,WAAI,QAAAA,GAAC9C,EAAKX,GACb,GAAIlC,GAAU,EAANkC,GAAWA,EAAMA,CACzB,IAAIW,EAAI/B,OAASd,EACb6C,EAAMA,EAAID,OAAO,EAAG5C,OACnB,CACD,GAAI2F,GAAMjG,MAAMM,EAAK,EAAK6C,EAAI/B,QAAQ8E,KAAK,IAC3C/C,GAAY,EAANX,EAAWW,EAAM8C,EAAQA,EAAM9C,EAEzC,MAAOA,iCAIJgD,cAAO,SAACrB,GACX,GAAIsB,GAAMnF,MACV,cAAe6D,IACX,IAAK,UACDsB,EAAStB,CACT,MACJ,KAAK,SACDsB,EAAoB,IAAVtB,IAAgBuB,MAAMvB,EAChC,MACJ,KAAK,SACDsB,EAAoB,KAAVtB,CACV,MACJ,KAAK,SACDsB,GAAS,EACK,OAAVtB,IACAsB,GAAS,EACLtB,YAAiB9E,SACjBoG,EAAStB,EAAM1D,OAAS,GAEhC,MACJ,SACIgF,GAAS,EAEjB,MAAOA,iCAIJE,cAAO,SAACxB,EAAO9C,GAClB,SAAW8C,KAAU9C,EACjB,IACI,OAAQA,GACJ,IAAK,UACD8C,EAAQyB,QAAQzB,EAChB,MACJ,KAAK,SACDA,EAAQ0B,OAAO1B,EACf,MACJ,KAAK,SACDA,EAAQ7B,OAAO6B,EACf,MACJ,KAAK,SACDA,EAAQ,GAAI2B,QAAO3B,IAI/B,MAAO4B,GACH,KAAM,IAAI7E,OAAM,iCAAmCG,GAG3D,MAAO8C,mCA/DMkB,oBAAAA;;YGKrB,IAAIyB,UACAU,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAO,yBAGIb;;iTDXXV,SAAWrD,QAAQ,aAGhBhD,YAAWsG,gBAAAtD,QAAY,sBACvBiD,gBAAeK,gBAAAtD,QAAQ,2BACvBuD,kBAAiBD,gBAAAtD,QAAM,6BACvBtE,kBAAiB4H,gBAAAtD,QAAM,6BACvBnC,UAASyF,gBAAAtD,QAAc,oBACvBwD,aAAYF,gBAAAtD,QAAW,wBACvByD,UAASH,gBAAAtD,QAAc,oBACvB0D,YAAWJ,gBAAAtD,QAAY,sBAGT2D,KAAI,WAET,QAFKA,0BAAAA,GAIb1G,KAAK2G,SAAW,GAAI5G,aACpBC,KAAK2G,SAASzG,SAASoG,mBACvBtG,KAAK2G,SAASzG,SAASzB,mBACvBuB,KAAK2G,SAASzG,SAAS8F,iBAGvBhG,KAAKa,OAAS,GAAID,UAClB,KAAK,GAAIgG,KAAQL,cACbvG,KAAKe,KAAK6F,EAAML,aAAaK,GAGjC5G,MAAK6G,OAAS,GAAIT,sCAfLM,EAAI,MAmBrBI,eAAQ,WACJ,MAAOL,2CAIXtG,eAAQ,QAAAA,GAACA,GACL,GAAyB,IAArByD,UAAUnD,OACV,KAAM,IAAIS,OAAM,4CAGpB,OAFAlB,MAAK2G,SAAStG,aACdL,KAAK2G,SAASzG,SAASC,GAChBH,mCAIXe,YAAK,QAAAA,GAACD,EAAMC,GACR,GAAyB,IAArB6C,UAAUnD,OACV,KAAM,IAAIS,OAAM,yCAEpB,OADAlB,MAAKa,OAAOX,SAASY,EAAMC,GACpBf,mCAIX+G,aAAM,SAACC,GACH,GAAyB,IAArBpD,UAAUnD,OACV,KAAM,IAAIS,OAAM,0CAEpB,OADAlB,MAAK6G,OAAOI,MAAMD,GACXhH,mCAIXkH,eAAQ,SAACC,EAAUC,GACf,GAAIxD,UAAUnD,OAAS,EACnB,KAAM,IAAIS,OAAM,mCACpB,IAAI0C,UAAUnD,OAAS,EACnB,KAAM,IAAIS,OAAM,mCACNZ,UAAV8G,IACAA,GAAQ,EACZ,IAAIrD,GAAQ/D,KAAK6G,OAAOV,IAAIgB,EAM5B,OALc7G,UAAVyD,IACAA,EAAQ,GAAIyC,WACZzC,EAAMmD,QAAQC,EAAUC,GACxBpH,KAAK6G,OAAOQ,IAAIF,EAAUpD,IAEvBA,gCAIXuD,eAAQ,SAAC3I,EAAMoF,EAAOwD,EAAQH,GAC1B,GAAIxD,UAAUnD,OAAS,EACnB,KAAM,IAAIS,OAAM,mCACpB,IAAI0C,UAAUnD,OAAS,EACnB,KAAM,IAAIS,OAAM,mCACLZ,UAAXiH,IACAA,MACUjH,SAAV8G,IACAA,GAAQ,EACZ,IAAIjH,GAAUH,KAAK2G,SAAShG,OAAOhC,EACnC,IAAgB2B,SAAZH,EACA,KAAM,IAAIe,OAAM,mDACpB,OAAO6C,GAAMuD,QAAQ3I,EAAMwB,EAASoH,EAAQvH,KAAKa,OAAQuG,iCAI7DrD,aAAM,SAACpF,EAAMwI,EAAUI,EAAQH,GAC3B,GAAIxD,UAAUnD,OAAS,EACnB,KAAM,IAAIS,OAAM,iCACpB,IAAI0C,UAAUnD,OAAS,EACnB,KAAM,IAAIS,OAAM,iCAKpB,OAJeZ,UAAXiH,IACAA,MACUjH,SAAV8G,IACAA,GAAQ,GACLpH,KAAKsH,QAAQ3I,EAAMqB,KAAKkH,QAAQC,EAAUC,GAAQG,EAAQH,mCA3FpDV,oBAAAA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nexport default ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +---------------------------------------\" +\n                        \"-----------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nexport default ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nexport default ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 3: false */\n/* global 20150211:  false */\n\nlet version = {\n    major: 1,\n    minor: 2,\n    micro: 3,\n    date:  20150211\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary(Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical(Q, T)\n            case \"Bitwise\":            return this.execExprBitwise(Q, T)\n            case \"Relational\":         return this.execExprRelational(Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical(Q, T)\n            case \"Unary\":              return this.execExprUnary(Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall(Q, T)\n            case \"Attribute\":          return this.execExprAttribute(Q, T)\n            case \"Param\":              return this.execExprParam(Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString(Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp(Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber(Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue(Q, T)\n            case \"Path\":               return this.execExprPath(Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        /* jscs: disable */\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        /* jscs: enable */\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {\n        _classCallCheck(this, ASTYBase);\n    }\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {\n        _classCallCheck(this, ASTYDump);\n    }\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {\n        _classCallCheck(this, ASTYMerge);\n    }\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 0: false */\n/* global 4: false */\n/* global 20150211:  false */\n\nvar version = {\n    major: 1,\n    minor: 0,\n    micro: 4,\n    date: 20150211\n};\n\nmodule.exports = version;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {\n        _classCallCheck(this, ASTYWalk);\n    }\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _interopRequire(_dereq_(\"./asty-base.js\"));\n\nvar ASTYMerge = _interopRequire(_dereq_(\"./asty-merge.js\"));\n\nvar ASTYWalk = _interopRequire(_dereq_(\"./asty-walk.js\"));\n\nvar ASTYDump = _interopRequire(_dereq_(\"./asty-dump.js\"));\n\nvar ASTYVersion = _interopRequire(_dereq_(\"./asty-version.js\"));\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        _classCallCheck(this, ASTYCtx);\n\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        version: {\n            value: function version() {\n                return ASTYVersion;\n            },\n            writable: true,\n            configurable: true\n        },\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-version.js\":4,\"./asty-walk.js\":5}]},{},[1,2,3,4,5,6])(6)\n});","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CacheLRU=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,i){t&&Object.defineProperties(e,t),i&&Object.defineProperties(e.prototype,i)},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _prototypeProperties(e,null,{limit:{value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t},writable:!0,configurable:!0},dispose:{value:function(e){return this._dispose=e,this},writable:!0,configurable:!0},length:{value:function(){return this._cur},writable:!0,configurable:!0},keys:{value:function(){return this.each(function(e,t){this.push(t)},[])},writable:!0,configurable:!0},values:{value:function(){return this.each(function(e){this.push(e)},[])},writable:!0,configurable:!0},each:{value:function(e,t){arguments<2&&(t=this);for(var i=0,r=this._MRU.older;r!==this._LRU;)e.call(t,r.val,r.key,i++),r=r.older;return t},writable:!0,configurable:!0},has:{value:function(e){var t=this._index[e];return void 0!==t},writable:!0,configurable:!0},peek:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):t.val},writable:!0,configurable:!0},touch:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this},writable:!0,configurable:!0},get:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)},writable:!0,configurable:!0},set:{value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var r=this._index[e];if(void 0===r)r={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=r,this._attach(r),this._cur++,this._purge();else{var n=r.val;r.val=t,this._promote(r),this._dispose.call(void 0,r.key,n,\"set\")}return this},writable:!0,configurable:!0},del:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this},writable:!0,configurable:!0},clear:{value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this},writable:!0,configurable:!0},_purge:{value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)},writable:!0,configurable:!0},_promote:{value:function(e){this._detach(e),this._attach(e)},writable:!0,configurable:!0},_detach:{value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null},writable:!0,configurable:!0},_attach:{value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e},writable:!0,configurable:!0}}),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map"]}