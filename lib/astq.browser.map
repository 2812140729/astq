{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-adapter.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query.js","src/astq-query-exec.js","src/astq-util.js","src/astq-version.js","src/astq.js","src/astq-query-trace.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js","node_modules/cache-lru/lib/cache-lru.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","ASTQAdapterMozAST","loc","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","ASTQAdapter","_adapters","register","adapter","unshift","unregister","adapters","i","length","select","stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","_pchilds","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","_funcs","name","func","run","args","apply","ASTY","require","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","SyntaxError","message","expected","found","offset","line","column","arguments","peg$FAILED","peg$startRuleFunctions","query","peg$parsequery","qs","peg$c4","value","description","f","l","ast","add","unroll","a","m","peg$c9","util","_interopRequire","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","_parent6","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","ASTQUtil","pad","join","isNaN","Boolean","Number","RegExp","e","version","major","minor","micro","date","CacheLRU","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","cache","entries","limit","compile","selector","set","execute","prefixOf","prefix1","prefix2","_prefixOf","console","log","replace","root","factory","define","amd","module","exports","global","window","makeAST","options","__makeAST","makeUnroll","list","j","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parse","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","key","_add","JSON","stringify","arg","del","splice",2,"ASTYDump","dump","maxDepth","Infinity","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","cb","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js","_classCallCheck","TypeError","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","dispose","each","values","has","peek","expires","Date","now","touch","_promote","_attach","_detach","clear"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nexport default ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nexport default ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nexport default ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +---------------------------------------\" +\n                        \"-----------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary(Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical(Q, T)\n            case \"Bitwise\":            return this.execExprBitwise(Q, T)\n            case \"Relational\":         return this.execExprRelational(Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical(Q, T)\n            case \"Unary\":              return this.execExprUnary(Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall(Q, T)\n            case \"Attribute\":          return this.execExprAttribute(Q, T)\n            case \"Param\":              return this.execExprParam(Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString(Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp(Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber(Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue(Q, T)\n            case \"Path\":               return this.execExprPath(Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        /* jscs: disable */\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        /* jscs: enable */\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 1: false */\n/* global 20150207:  false */\n\nlet version = {\n    major: 1,\n    minor: 2,\n    micro: 1,\n    date:  20150207\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CacheLRU=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,i){t&&Object.defineProperties(e,t),i&&Object.defineProperties(e.prototype,i)},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _prototypeProperties(e,null,{limit:{value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t},writable:!0,configurable:!0},dispose:{value:function(e){return this._dispose=e,this},writable:!0,configurable:!0},length:{value:function(){return this._cur},writable:!0,configurable:!0},keys:{value:function(){return this.each(function(e,t){this.push(t)},[])},writable:!0,configurable:!0},values:{value:function(){return this.each(function(e){this.push(e)},[])},writable:!0,configurable:!0},each:{value:function(e,t){arguments<2&&(t=this);for(var i=0,r=this._MRU.older;r!==this._LRU;)e.call(t,r.val,r.key,i++),r=r.older;return t},writable:!0,configurable:!0},has:{value:function(e){var t=this._index[e];return void 0!==t},writable:!0,configurable:!0},peek:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):t.val},writable:!0,configurable:!0},touch:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this},writable:!0,configurable:!0},get:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)},writable:!0,configurable:!0},set:{value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var r=this._index[e];if(void 0===r)r={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=r,this._attach(r),this._cur++,this._purge();else{var n=r.val;r.val=t,this._promote(r),this._dispose.call(void 0,r.key,n,\"set\")}return this},writable:!0,configurable:!0},del:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this},writable:!0,configurable:!0},clear:{value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this},writable:!0,configurable:!0},_purge:{value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)},writable:!0,configurable:!0},_promote:{value:function(e){this._detach(e),this._attach(e)},writable:!0,configurable:!0},_detach:{value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null},writable:!0,configurable:!0},_attach:{value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e},writable:!0,configurable:!0}}),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map"]}