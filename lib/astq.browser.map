{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-funcs-std.js","src/astq-adapter-xmldom.js","src/astq-query-trace.js","src/astq-query.js","src/astq-util.js","src/astq-query-exec.js","src/astq-adapter-mozast.js","src/astq-version.js","src/astq.js","src/astq-adapter-asty.js","src/astq-adapter.js","src/astq-funcs.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js","node_modules/cache-lru/lib/cache-lru.js"],"names":["stdfuncs","type","A","T","getNodeType","depth","node","getParentNode","pos","parent","pchilds","getChildNodes","i","length","Error","nth","num","parseInt","first","last","count","val","Array","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQAdapterXMLDOM","taste","Node","nodeType","nodeName","parentNode","childNodes","getNodeAttrNames","prototype","slice","call","attributes","map","n","getNodeAttrValue","attr","getAttribute","util","_interopRequire","require","ASTQQueryTrace","prefixOf","Q","prefix1","pad","this","adapter","prefix2","traceBegin","trace","_prefixOf","console","log","traceEnd","result","undefined","forEach","_this","replace","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","expected","found","offset","line","column","message","name","parse","input","options","arguments","peg$FAILED","peg$c0","peg$c7","peg$c8","a","m","f","ast","add","value","description","ASTQUtil","join","truthy","isNaN","coerce","Boolean","Number","RegExp","e","ASTQQueryExec","params","funcs","execQuery","output","childs","concat","execPath","nodes","execStep","axis","match","filter","id","get","matchAndTake","take","execFilter","push","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","expr","execExpr","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","v2","Math","pow","v","args","run","ASTQAdapterMozAST","loc","field","hasOwnProperty","names","version","major","minor","micro","date","CacheLRU","ASTQAdapter","ASTQAdapterASTY","ASTQAdapterMOZAST","ASTQFuncs","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","register","_funcs","_name","func","_cache","unregister","cache","entries","limit","compile","selector","query","set","execute","select","ASTy","attrs","_adapters","unshift","adapters","apply","root","factory","define","amd","module","exports","global","window","makeAST","__makeAST","makeUnroll","SyntaxError","list","j","excerpt","txt","o","l","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","key","_add","JSON","stringify","arg","del","splice",2,"ASTYDump","dump","maxDepth","Infinity","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","cb","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js","_classCallCheck","TypeError","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","dispose","each","values","has","peek","expires","Date","now","touch","_promote","_attach","_detach","clear"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nexport default ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nexport default ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 0: false */\n/* global 20150201:  false */\n\nlet version = {\n    major: 1,\n    minor: 1,\n    micro: 0,\n    date:  20150201\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nexport default ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CacheLRU=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,i){t&&Object.defineProperties(e,t),i&&Object.defineProperties(e.prototype,i)},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _prototypeProperties(e,null,{limit:{value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t},writable:!0,configurable:!0},dispose:{value:function(e){return this._dispose=e,this},writable:!0,configurable:!0},length:{value:function(){return this._cur},writable:!0,configurable:!0},keys:{value:function(){return this.each(function(e,t){this.push(t)},[])},writable:!0,configurable:!0},values:{value:function(){return this.each(function(e){this.push(e)},[])},writable:!0,configurable:!0},each:{value:function(e,t){arguments<2&&(t=this);for(var i=0,r=this._MRU.older;r!==this._LRU;)e.call(t,r.val,r.key,i++),r=r.older;return t},writable:!0,configurable:!0},has:{value:function(e){var t=this._index[e];return void 0!==t},writable:!0,configurable:!0},peek:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):t.val},writable:!0,configurable:!0},touch:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this},writable:!0,configurable:!0},get:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)},writable:!0,configurable:!0},set:{value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var r=this._index[e];if(void 0===r)r={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=r,this._attach(r),this._cur++,this._purge();else{var n=r.val;r.val=t,this._promote(r),this._dispose.call(void 0,r.key,n,\"set\")}return this},writable:!0,configurable:!0},del:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this},writable:!0,configurable:!0},clear:{value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this},writable:!0,configurable:!0},_purge:{value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)},writable:!0,configurable:!0},_promote:{value:function(e){this._detach(e),this._attach(e)},writable:!0,configurable:!0},_detach:{value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null},writable:!0,configurable:!0},_attach:{value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e},writable:!0,configurable:!0}}),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map"]}