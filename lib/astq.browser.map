{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-query.js","src/astq.js","src/astq-version.js","src/astq-adapter.js","src/astq-util.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js","node_modules/cache-lru/lib/cache-lru.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","ASTQAdapterMozAST","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","stdfuncs","A","T","depth","pos","pchilds","i","length","nth","num","parseInt","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","_funcs","register","name","func","run","args","apply","util","_interopRequire","require","ASTQQueryTrace","ASTQQueryExec","_ASTQQueryTrace","adapter","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","_parent6","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","replace","ASTY","PEGUtil","ASTQQueryParse","ctor","SyntaxError","message","expected","found","offset","line","column","parse","input","options","arguments","peg$FAILED","query","peg$parsequery","peg$startRuleFunction","peg$c0","peg$c1","qs","ast","add","unroll","f","l","peg$c9","description","peg$c10","peg$c11","value","CacheLRU","ASTQAdapter","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","version","unregister","cache","entries","limit","compile","selector","set","execute","select","major","minor","micro","date","_adapters","unshift","adapters","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","root","factory","define","amd","module","exports","global","window","makeAST","__makeAST","makeUnroll","list","j","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","g","self","t","r","s","u","a","code",1,"_dereq_","_prototypeProperties","child","staticProps","instanceProps","defineProperties","_classCallCheck","instance","Constructor","TypeError","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","key","_add","JSON","stringify","arg","del","splice",2,"ASTYDump","dump","maxDepth","Infinity","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,5,"ASTYWalk","cb","when","_walk",6,"obj","__esModule","ASTYVersion","ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-version.js","./asty-walk.js","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","dispose","each","values","has","peek","expires","Date","now","touch","_promote","_attach","_detach","clear"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterASTY {\n    static taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    }\n    static getParentNode (node) {\n        return node.parent()\n    }\n    static getChildNodes (node) {\n        return node.childs()\n    }\n    static getNodeType (node) {\n        return node.type()\n    }\n    static getNodeAttrNames (node) {\n        return node.attrs()\n    }\n    static getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nexport default class ASTQAdapterMozAST {\n    static taste (node) {\n        return (\n               typeof node === \"object\"\n            && node !== null\n            && typeof node.type === \"string\"\n            && node.type !== \"\"\n        )\n    }\n    static getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    }\n    static getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node[field])\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    }\n    static getNodeType (node) {\n        return node.type\n    }\n    static getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    }\n    static getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterXMLDOM {\n    static taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    }\n    static getParentNode (node) {\n        return node.parentNode\n    }\n    static getChildNodes (node) {\n        return node.childNodes\n    }\n    static getNodeType (node) {\n        return node.nodeName\n    }\n    static getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    }\n    static getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary(Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical(Q, T)\n            case \"Bitwise\":            return this.execExprBitwise(Q, T)\n            case \"Relational\":         return this.execExprRelational(Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical(Q, T)\n            case \"Unary\":              return this.execExprUnary(Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall(Q, T)\n            case \"Attribute\":          return this.execExprAttribute(Q, T)\n            case \"Param\":              return this.execExprParam(Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString(Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp(Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber(Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue(Q, T)\n            case \"Path\":               return this.execExprPath(Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        /* jscs: disable */\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        /* jscs: enable */\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +---------------------------------------\" +\n                        \"-----------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 9: false */\n/* global 20150308:  false */\n\nlet version = {\n    major: 1,\n    minor: 2,\n    micro: 9,\n    date:  20150308\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ASTY = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {\n        _classCallCheck(this, ASTYBase);\n    }\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n\n            value: function type(T) {\n                if (arguments.length === 0) {\n                    return this.T;\n                } else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) {\n                    return this.L;\n                } else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n\n            value: function set() {\n                var _this = this;\n\n                var _arguments = arguments;\n\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n\n            value: function add() {\n                var _this = this;\n\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n\n            value: function del() {\n                var _this = this;\n\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {\n        _classCallCheck(this, ASTYDump);\n    }\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {\n        _classCallCheck(this, ASTYMerge);\n    }\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 0: false */\n/* global 8: false */\n/* global 20150301:  false */\n\nvar version = {\n    major: 1,\n    minor: 0,\n    micro: 8,\n    date: 20150301\n};\n\nmodule.exports = version;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {\n        _classCallCheck(this, ASTYWalk);\n    }\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _interopRequire(_dereq_(\"./asty-base.js\"));\n\nvar ASTYMerge = _interopRequire(_dereq_(\"./asty-merge.js\"));\n\nvar ASTYWalk = _interopRequire(_dereq_(\"./asty-walk.js\"));\n\nvar ASTYDump = _interopRequire(_dereq_(\"./asty-dump.js\"));\n\nvar ASTYVersion = _interopRequire(_dereq_(\"./asty-version.js\"));\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n\n        _classCallCheck(this, ASTYCtx);\n\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        version: {\n            value: function version() {\n                return ASTYVersion;\n            },\n            writable: true,\n            configurable: true\n        },\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-version.js\":4,\"./asty-walk.js\":5}]},{},[1,2,3,4,5,6])(6)\n});","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CacheLRU=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,i){t&&Object.defineProperties(e,t),i&&Object.defineProperties(e.prototype,i)},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _prototypeProperties(e,null,{limit:{value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t},writable:!0,configurable:!0},dispose:{value:function(e){return this._dispose=e,this},writable:!0,configurable:!0},length:{value:function(){return this._cur},writable:!0,configurable:!0},keys:{value:function(){return this.each(function(e,t){this.push(t)},[])},writable:!0,configurable:!0},values:{value:function(){return this.each(function(e){this.push(e)},[])},writable:!0,configurable:!0},each:{value:function(e,t){arguments<2&&(t=this);for(var i=0,r=this._MRU.older;r!==this._LRU;)e.call(t,r.val,r.key,i++),r=r.older;return t},writable:!0,configurable:!0},has:{value:function(e){var t=this._index[e];return void 0!==t},writable:!0,configurable:!0},peek:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):t.val},writable:!0,configurable:!0},touch:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this},writable:!0,configurable:!0},get:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)},writable:!0,configurable:!0},set:{value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var r=this._index[e];if(void 0===r)r={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=r,this._attach(r),this._cur++,this._purge();else{var n=r.val;r.val=t,this._promote(r),this._dispose.call(void 0,r.key,n,\"set\")}return this},writable:!0,configurable:!0},del:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this},writable:!0,configurable:!0},clear:{value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this},writable:!0,configurable:!0},_purge:{value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)},writable:!0,configurable:!0},_promote:{value:function(e){this._detach(e),this._attach(e)},writable:!0,configurable:!0},_detach:{value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null},writable:!0,configurable:!0},_attach:{value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e},writable:!0,configurable:!0}}),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map"]}