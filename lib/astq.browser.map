{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter.js","src/astq-cache.js","src/astq-adapter-xmldom.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-funcs-std.js","src/astq-query.js","src/astq-adapter-mozast.js","src/astq-adapter-asty.js","src/astq-util.js","src/astq-funcs.js","src/astq.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapter","this","_adapters","register","adapter","push","select","node","i","length","taste","undefined","module","exports","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","keys","each","val","key","values","ctx","bucket","call","has","peek","expires","Date","now","del","touch","_promote","get","set","_attach","valOld","Error","_detach","clear","ASTQAdapterXMLDOM","Node","nodeType","nodeName","getParentNode","parentNode","getChildNodes","childNodes","getNodeType","getNodeAttrNames","Array","prototype","slice","attributes","map","n","getNodeAttrValue","attr","getAttribute","util","require","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","T","traceBegin","output","childs","forEach","concat","_this","execPath","traceEnd","nodes","_this2","execStep","axis","match","filter","type","id","matchAndTake","_this3","take","execFilter","op","walk","parent","pchilds","leftSibling","_i","_i2","_i3","_i4","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","args","_this4","run","prefixOf","depth","prefix1","pad","prefix2","_prefixOf","console","log","_prefixOf2","replace","substr","stdfuncs","A","pos","nth","num","parseInt","first","last","count","Object","String","str","len","lc","toLowerCase","uc","toUpperCase","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","SyntaxError","message","expected","found","offset","line","column","name","peg$FAILED","peg$startRuleFunctions","query","peg$parsequery","peg$startRuleFunction","peg$c3","peg$c4","value","description","peg$c5","f","l","ast","add","unroll","a","m","peg$c10","ASTQAdapterMozAST","loc","field","hasOwnProperty","names","ASTQAdapterASTY","ASTy","attrs","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","ASTQFuncs","_funcs","func","apply","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQ","_adapter","_cache","cache","entries","compile","selector","execute","root","factory","define","amd","global","window","makeAST","options","__makeAST","makeUnroll","list","j","unshift","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parse","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","L","C","O","P","writable","enumerable","configurable","merge","takePos","attrMap","attrSource","attrTarget","_add","JSON","stringify","arg","splice","when","_walk",2,"ASTYDump","dump","out",3,"cls","mixin",4,"_inherits","subClass","superClass","TypeError","create","__proto__","mixins","_mixins","extend","methods","method","./asty-base.js","./asty-dump.js","./asty-mixins.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.push(adapter)\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\nmodule.exports = ASTQAdapter\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQCache {\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n    length () {\n        return this._cur\n    }\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires\n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n    _detach (bucket) {\n        /*  detach bucket from list  */\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n    _attach (bucket) {\n        /*  attach bucket to list as MRU bucket  */\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\nmodule.exports = ASTQCache\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util          = require(\"./astq-util.js\")\nlet ASTQQueryTrace = require(\"./astq-query-trace.js\")\n\nlet ASTQQueryExec = class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"<~\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"<~~\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~>\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~~>\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"~^\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"~~^\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\nmodule.exports = ASTQQueryExec\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util = require(\"./astq-util.js\")\n\nlet ASTQQueryTrace = class ASTQQueryTrace {\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n\n        depth = 0\n        let node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n\n        return { prefix1, prefix2 }\n    }\n\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\nmodule.exports = ASTQQueryTrace\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1);\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nmodule.exports = stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\nlet ASTQQueryExec = require(\"./astq-query-exec.js\")\n\nlet ASTQQuery = class ASTQQuery {\n    constructor (selector) {\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return ASTY.apply(null, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n    dump () {\n        return this.ast.dump()\n    }\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\nmodule.exports = ASTQQuery\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nmodule.exports = ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    pad (str, num) {\n        if (num < 0)\n            return (str.length > -num ? str.substr(0, -num) : (str + Array((-num) + 1 - str.length).join(\" \")))\n        else\n            return (str.length > num ? str.substr(0, num) : Array(num + 1 - str.length).join(\" \") + str)\n    },\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = (value.length > 0)\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n    coerce (value, type) {\n        let result\n        try {\n            switch (type) {\n                case \"boolean\":\n                    result = Boolean(value)\n                    break\n                case \"number\":\n                    result = Number(value)\n                    break\n                case \"string\":\n                    result = String(value)\n                    break\n                case \"regexp\":\n                    result = new RegExp(value)\n                    break\n                default:\n                    result = value\n            }\n        }\n        catch (e) {\n            throw new Error(\"cannot coerce value into type \" + type)\n        }\n        return result\n    }\n}\n\nmodule.exports = ASTQUtil\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\nmodule.exports = ASTQFuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapter       = require(\"./astq-adapter.js\")\nlet ASTQAdapterASTY   = require(\"./astq-adapter-asty.js\")\nlet ASTQAdapterMOZAST = require(\"./astq-adapter-xmldom.js\")\nlet ASTQAdapterXMLDOM = require(\"./astq-adapter-xmldom.js\")\nlet ASTQFuncs         = require(\"./astq-funcs.js\")\nlet ASTQFuncsSTD      = require(\"./astq-funcs-std.js\")\nlet ASTQCache         = require(\"./astq-cache.js\")\nlet ASTQQuery         = require(\"./astq-query.js\")\n\nlet ASTQ = class ASTQ {\n    constructor () {\n        if (!(this instanceof ASTQ))\n            return new ASTQ()\n        this._adapter = new ASTQAdapter()\n        this._funcs   = new ASTQFuncs()\n        this._cache   = new ASTQCache()\n        this.adapter(ASTQAdapterASTY)\n        this.adapter(ASTQAdapterMOZAST)\n        this.adapter(ASTQAdapterXMLDOM)\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n    }\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.register(adapter)\n        return this\n    }\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\nmodule.exports = ASTQ\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n  function ASTYBase() {}\n\n  _prototypeProperties(ASTYBase, null, {\n    init: {\n      /*  constructor helper: AST node initialization  */\n      value: function init(T) {\n        if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n        this.ASTy = true;\n        this.T = T;\n        this.L = { L: 0, C: 0, O: 0 };\n        this.A = {};\n        this.C = [];\n        this.P = null;\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    merge: {\n\n      /*  merge attributes and childs of an AST node  */\n      value: function merge(node, takePos, attrMap) {\n        if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n        if (typeof takePos === \"undefined\") takePos = false;\n        if (typeof attrMap === \"undefined\") attrMap = {};\n        var self = this;\n        if (takePos) {\n          var pos = node.pos();\n          self.pos(pos.L, pos.C, pos.O);\n        }\n        node.attrs().forEach(function (attrSource) {\n          var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n          if (attrTarget !== null) self.set(attrTarget, node.get(attrSource));\n        });\n        node.childs().forEach(function (child) {\n          self.add(child);\n        });\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    type: {\n\n      /*  check the type of an AST node  */\n      value: function type(T) {\n        if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n          this.T = T;\n          return this;\n        } else throw new Error(\"type: invalid number of arguments\");\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    pos: {\n\n      /*  set the parsing position   */\n      value: function pos(L, C, O) {\n        if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n          this.L.L = L || 0;\n          this.L.C = C || 0;\n          this.L.O = O || 0;\n          return this;\n        } else throw new Error(\"pos: invalid number of arguments\");\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    set: {\n\n      /*  set AST node attributes  */\n      value: function set() {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n          var self = this;\n          var args = arguments;\n          Object.keys(args[0]).forEach(function (key) {\n            self.A[key] = args[0][key];\n          });\n        } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    get: {\n\n      /*  get AST node attributes  */\n      value: function get(key) {\n        if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n        if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n        return this.A[key];\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    attrs: {\n\n      /*  get names of all AST node attributes  */\n      value: function attrs() {\n        return Object.keys(this.A);\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    add: {\n\n      /*  add child AST node(s)  */\n      value: function add() {\n        if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n        var _add = function (node, child) {\n          if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n          node.C.push(child);\n          child.P = node;\n        };\n        if (arguments !== null) {\n          var self = this;\n          Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n            if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n              _add(self, child);\n            });else if (arg !== null) _add(self, arg);\n          });\n        }\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    del: {\n\n      /*  delete child AST node(s)  */\n      value: function del() {\n        if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n        var self = this;\n        Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n          var found = false;\n          for (var j = 0; j < self.C.length; j++) {\n            if (self.C[j] === arg) {\n              self.C.splice(j, 1);\n              arg.P = null;\n              found = true;\n              break;\n            }\n          }\n          if (!found) throw new Error(\"del: child not found\");\n        });\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    childs: {\n\n      /*  get child AST nodes  */\n      value: function childs() {\n        return this.C;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    parent: {\n\n      /*  get parent AST node  */\n      value: function parent() {\n        return this.P;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    walk: {\n\n      /*  walk the AST recursively  */\n      value: function walk(cb, when) {\n        if (typeof when === \"undefined\") when = \"downward\";\n        var _walk = function (node, depth, parent) {\n          if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n          node.C.forEach(function (child) {\n            _walk(child, depth + 1, node);\n          });\n          if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n        };\n        _walk(this, 0, null);\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n  function ASTYDump() {}\n\n  _prototypeProperties(ASTYDump, null, {\n    dump: {\n      /*  dump the AST recursively  */\n      value: function dump() {\n        var out = \"\";\n        this.walk(function (node, depth /*, parent, when */) {\n          for (var i = 0; i < depth; i++) out += \"    \";\n          out += node.T + \" \";\n          var keys = Object.keys(node.A);\n          if (keys.length > 0) {\n            out += \"(\";\n            var first = true;\n            keys.forEach(function (key) {\n              if (!first) out += \", \";else first = false;\n              out += key + \": \";\n              var value = node.A[key];\n              switch (typeof value) {\n                case \"string\":\n                  out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                  break;\n                case \"object\":\n                  if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                  break;\n                default:\n                  out += JSON.stringify(value);\n                  break;\n              }\n            });\n            out += \") \";\n          }\n          out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n        }, \"downward\");\n        return out;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  little helper function for ES6 style mixin support  */\nmodule.exports = function mixins() {\n  var cls = function () {};\n  for (var i = 0; i < arguments.length; i++) {\n    var mixin = arguments[i];\n    if (typeof mixin === \"function\") mixin = mixin.prototype;\n    for (var key in mixin) if (Object.prototype.hasOwnProperty.call(mixin, key)) cls.prototype[key] = mixin[key];\n  }\n  return cls;\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) subClass.__proto__ = superClass;\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\nvar mixins = _dereq_(\"./asty-mixins.js\");\n\n/*  the base class  */\nvar ASTY = (function (_mixins) {\n  /*  the constructor mainly passes control to the init function  */\n  function ASTY() {\n    if (!(this instanceof ASTY)) {\n      var self = new ASTY(\"\");\n      return self.init.apply(self, arguments);\n    } else return this.init.apply(this, arguments);\n  }\n\n  _inherits(ASTY, _mixins);\n\n  return ASTY;\n})(mixins(ASTYBase, ASTYDump));\n\n/*  static function for extending the class  */\nASTY.extend = function (methods) {\n  for (var method in methods) ASTY.prototype[method] = methods[method];\n};\n\nmodule.exports = ASTY;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-mixins.js\":3}]},{},[1,2,3,4])(4)\n});"]}