{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter.js","src/astq-cache.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-adapter-xmldom.js","src/astq-query.js","src/astq.js","src/astq-util.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","module","exports","ASTQAdapterMozAST","loc","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapter","_adapters","register","adapter","select","i","length","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","keys","each","val","key","values","ctx","bucket","call","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear","stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","first","last","count","Object","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","_funcs","name","func","run","args","apply","util","require","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","_this2","execStep","axis","match","filter","id","matchAndTake","_this3","take","execFilter","op","walk","leftSibling","_i","_i2","_i3","_i4","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","_this4","prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","_prefixOf2","replace","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","attributes","map","n","getAttribute","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","SyntaxError","message","expected","found","offset","line","column","peg$FAILED","peg$startRuleFunctions","query","peg$parsequery","peg$startRuleFunction","peg$c3","peg$c4","value","description","peg$c5","f","l","ast","add","unroll","a","m","peg$c10","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQ","_adapter","_cache","cache","entries","compile","selector","execute","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","root","factory","define","amd","global","window","makeAST","options","__makeAST","makeUnroll","list","j","unshift","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parse","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","L","C","O","P","writable","enumerable","configurable","merge","takePos","attrMap","attrSource","attrTarget","_add","JSON","stringify","arg","splice","when","_walk",2,"ASTYDump","dump","out",3,"cls","mixin",4,"_inherits","subClass","superClass","TypeError","create","__proto__","mixins","_mixins","extend","methods","method","./asty-base.js","./asty-dump.js","./asty-mixins.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nmodule.exports = ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.push(adapter)\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\nmodule.exports = ASTQAdapter\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQCache {\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n    length () {\n        return this._cur\n    }\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires \n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n    _detach (bucket) {\n        /*  detach bucket from list  */\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n    _attach (bucket) {\n        /*  attach bucket to list as MRU bucket  */\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\nmodule.exports = ASTQCache\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\") \n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1);\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nmodule.exports = stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\nmodule.exports = ASTQFuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util          = require(\"./astq-util.js\")\nlet ASTQQueryTrace = require(\"./astq-query-trace.js\")\n\nlet ASTQQueryExec = class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"<~\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"<~~\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~>\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~~>\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"~^\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"~~^\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break \n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\nmodule.exports = ASTQQueryExec\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util = require(\"./astq-util.js\")\n\nlet ASTQQueryTrace = class ASTQQueryTrace {\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n\n        depth = 0\n        let node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n\n        return { prefix1, prefix2 }\n    }\n\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\nmodule.exports = ASTQQueryTrace\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\nlet ASTQQueryExec = require(\"./astq-query-exec.js\")\n\nlet ASTQQuery = class ASTQQuery {\n    constructor (selector) {\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return ASTY.apply(null, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n    dump () {\n        return this.ast.dump()\n    }\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\nmodule.exports = ASTQQuery\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapter       = require(\"./astq-adapter.js\")\nlet ASTQAdapterASTY   = require(\"./astq-adapter-asty.js\")\nlet ASTQAdapterMOZAST = require(\"./astq-adapter-xmldom.js\")\nlet ASTQAdapterXMLDOM = require(\"./astq-adapter-xmldom.js\")\nlet ASTQFuncs         = require(\"./astq-funcs.js\")\nlet ASTQFuncsSTD      = require(\"./astq-funcs-std.js\")\nlet ASTQCache         = require(\"./astq-cache.js\")\nlet ASTQQuery         = require(\"./astq-query.js\")\n\nlet ASTQ = class ASTQ {\n    constructor () {\n        if (!(this instanceof ASTQ))\n            return new ASTQ()\n        this._adapter = new ASTQAdapter()\n        this._funcs   = new ASTQFuncs()\n        this._cache   = new ASTQCache()\n        this.adapter(ASTQAdapterASTY)\n        this.adapter(ASTQAdapterMOZAST)\n        this.adapter(ASTQAdapterXMLDOM)\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n    }\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.register(adapter)\n        return this\n    }\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\nmodule.exports = ASTQ\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    pad (str, num) {\n        if (num < 0)\n            return (str.length > -num ? str.substr(0, -num) : (str + Array((-num) + 1 - str.length).join(\" \")))\n        else\n            return (str.length > num ? str.substr(0, num) : Array(num + 1 - str.length).join(\" \") + str)\n    },\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = (value.length > 0)\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n    coerce (value, type) {\n        let result\n        try {\n            switch (type) {\n                case \"boolean\":\n                    result = Boolean(value)\n                    break\n                case \"number\":\n                    result = Number(value)\n                    break\n                case \"string\":\n                    result = String(value)\n                    break\n                case \"regexp\":\n                    result = new RegExp(value)\n                    break\n                default:\n                    result = value\n            }\n        }\n        catch (e) {\n            throw new Error(\"cannot coerce value into type \" + type)\n        }\n        return result\n    }\n}\n\nmodule.exports = ASTQUtil\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n  function ASTYBase() {}\n\n  _prototypeProperties(ASTYBase, null, {\n    init: {\n      /*  constructor helper: AST node initialization  */\n      value: function init(T) {\n        if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n        this.ASTy = true;\n        this.T = T;\n        this.L = { L: 0, C: 0, O: 0 };\n        this.A = {};\n        this.C = [];\n        this.P = null;\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    merge: {\n\n      /*  merge attributes and childs of an AST node  */\n      value: function merge(node, takePos, attrMap) {\n        if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n        if (typeof takePos === \"undefined\") takePos = false;\n        if (typeof attrMap === \"undefined\") attrMap = {};\n        var self = this;\n        if (takePos) {\n          var pos = node.pos();\n          self.pos(pos.L, pos.C, pos.O);\n        }\n        node.attrs().forEach(function (attrSource) {\n          var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n          if (attrTarget !== null) self.set(attrTarget, node.get(attrSource));\n        });\n        node.childs().forEach(function (child) {\n          self.add(child);\n        });\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    type: {\n\n      /*  check the type of an AST node  */\n      value: function type(T) {\n        if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n          this.T = T;\n          return this;\n        } else throw new Error(\"type: invalid number of arguments\");\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    pos: {\n\n      /*  set the parsing position   */\n      value: function pos(L, C, O) {\n        if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n          this.L.L = L || 0;\n          this.L.C = C || 0;\n          this.L.O = O || 0;\n          return this;\n        } else throw new Error(\"pos: invalid number of arguments\");\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    set: {\n\n      /*  set AST node attributes  */\n      value: function set() {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n          var self = this;\n          var args = arguments;\n          Object.keys(args[0]).forEach(function (key) {\n            self.A[key] = args[0][key];\n          });\n        } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    get: {\n\n      /*  get AST node attributes  */\n      value: function get(key) {\n        if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n        if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n        return this.A[key];\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    attrs: {\n\n      /*  get names of all AST node attributes  */\n      value: function attrs() {\n        return Object.keys(this.A);\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    add: {\n\n      /*  add child AST node(s)  */\n      value: function add() {\n        if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n        var _add = function (node, child) {\n          if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n          node.C.push(child);\n          child.P = node;\n        };\n        if (arguments !== null) {\n          var self = this;\n          Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n            if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n              _add(self, child);\n            });else if (arg !== null) _add(self, arg);\n          });\n        }\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    del: {\n\n      /*  delete child AST node(s)  */\n      value: function del() {\n        if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n        var self = this;\n        Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n          var found = false;\n          for (var j = 0; j < self.C.length; j++) {\n            if (self.C[j] === arg) {\n              self.C.splice(j, 1);\n              arg.P = null;\n              found = true;\n              break;\n            }\n          }\n          if (!found) throw new Error(\"del: child not found\");\n        });\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    childs: {\n\n      /*  get child AST nodes  */\n      value: function childs() {\n        return this.C;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    parent: {\n\n      /*  get parent AST node  */\n      value: function parent() {\n        return this.P;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    walk: {\n\n      /*  walk the AST recursively  */\n      value: function walk(cb, when) {\n        if (typeof when === \"undefined\") when = \"downward\";\n        var _walk = function (node, depth, parent) {\n          if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n          node.C.forEach(function (child) {\n            _walk(child, depth + 1, node);\n          });\n          if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n        };\n        _walk(this, 0, null);\n        return this;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n  function ASTYDump() {}\n\n  _prototypeProperties(ASTYDump, null, {\n    dump: {\n      /*  dump the AST recursively  */\n      value: function dump() {\n        var out = \"\";\n        this.walk(function (node, depth /*, parent, when */) {\n          for (var i = 0; i < depth; i++) out += \"    \";\n          out += node.T + \" \";\n          var keys = Object.keys(node.A);\n          if (keys.length > 0) {\n            out += \"(\";\n            var first = true;\n            keys.forEach(function (key) {\n              if (!first) out += \", \";else first = false;\n              out += key + \": \";\n              var value = node.A[key];\n              switch (typeof value) {\n                case \"string\":\n                  out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                  break;\n                case \"object\":\n                  if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                  break;\n                default:\n                  out += JSON.stringify(value);\n                  break;\n              }\n            });\n            out += \") \";\n          }\n          out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n        }, \"downward\");\n        return out;\n      },\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  little helper function for ES6 style mixin support  */\nmodule.exports = function mixins() {\n  var cls = function () {};\n  for (var i = 0; i < arguments.length; i++) {\n    var mixin = arguments[i];\n    if (typeof mixin === \"function\") mixin = mixin.prototype;\n    for (var key in mixin) if (Object.prototype.hasOwnProperty.call(mixin, key)) cls.prototype[key] = mixin[key];\n  }\n  return cls;\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) subClass.__proto__ = superClass;\n};\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\nvar mixins = _dereq_(\"./asty-mixins.js\");\n\n/*  the base class  */\nvar ASTY = (function (_mixins) {\n  /*  the constructor mainly passes control to the init function  */\n  function ASTY() {\n    if (!(this instanceof ASTY)) {\n      var self = new ASTY(\"\");\n      return self.init.apply(self, arguments);\n    } else return this.init.apply(this, arguments);\n  }\n\n  _inherits(ASTY, _mixins);\n\n  return ASTY;\n})(mixins(ASTYBase, ASTYDump));\n\n/*  static function for extending the class  */\nASTY.extend = function (methods) {\n  for (var method in methods) ASTY.prototype[method] = methods[method];\n};\n\nmodule.exports = ASTY;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-mixins.js\":3}]},{},[1,2,3,4])(4)\n});"]}