{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-mozast.js","src/astq-adapter.js","src/astq-adapter-xmldom.js","src/astq-funcs-std.js","src/astq-query-exec.js","src/astq-adapter-asty.js","src/astq-cache.js","src/astq-util.js","src/astq-query.js","src/astq-query-trace.js","src/astq.js","src/astq-funcs.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapterMozAST","taste","node","type","loc","getParentNode","Error","getChildNodes","childs","field","hasOwnProperty","this","push","Array","forEach","_this","getNodeType","getNodeAttrNames","names","getNodeAttrValue","attr","undefined","module","exports","ASTQAdapter","_adapters","register","adapter","unshift","unregister","adapters","i","length","select","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","stdfuncs","A","T","depth","pos","parent","pchilds","nth","num","parseInt","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","util","require","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","get","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","args","run","ASTQAdapterASTY","ASTy","attrs","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","each","key","values","ctx","bucket","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear","ASTQUtil","pad","join","value","isNaN","Boolean","Number","RegExp","e","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","message","expected","found","offset","line","column","input","query","peg$parsequery","peg$startRuleFunction","peg$c3","peg$c4","description","peg$c5","f","l","ast","add","unroll","a","m","peg$c9","SyntaxError","prefixOf","prefix1","prefix2","_prefixOf","console","log","replace","ASTQAdapterMOZAST","ASTQFuncs","ASTQFuncsSTD","ASTQQuery","ASTQ","_adapter","_funcs","_cache","_name","func","name","cache","entries","compile","selector","execute","apply","root","factory","define","amd","global","window","makeAST","options","__makeAST","makeUnroll","list","j","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parse","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","_add","JSON","stringify","arg","splice",2,"ASTYDump","dump","maxDepth","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nmodule.exports = ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\nmodule.exports = ASTQAdapter\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nmodule.exports = stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util          = require(\"./astq-util.js\")\nlet ASTQQueryTrace = require(\"./astq-query-trace.js\")\n\nlet ASTQQueryExec = class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"<~\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"<~~\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~>\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"~~>\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"~^\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"~~^\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\nmodule.exports = ASTQQueryExec\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQCache {\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n    length () {\n        return this._cur\n    }\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires\n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n    _detach (bucket) {\n        /*  detach bucket from list  */\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n    _attach (bucket) {\n        /*  attach bucket to list as MRU bucket  */\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\nmodule.exports = ASTQCache\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    pad (str, num) {\n        if (num < 0)\n            return (str.length > -num ? str.substr(0, -num) : (str + Array((-num) + 1 - str.length).join(\" \")))\n        else\n            return (str.length > num ? str.substr(0, num) : Array(num + 1 - str.length).join(\" \") + str)\n    },\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = (value.length > 0)\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n    coerce (value, type) {\n        let result\n        try {\n            switch (type) {\n                case \"boolean\":\n                    result = Boolean(value)\n                    break\n                case \"number\":\n                    result = Number(value)\n                    break\n                case \"string\":\n                    result = String(value)\n                    break\n                case \"regexp\":\n                    result = new RegExp(value)\n                    break\n                default:\n                    result = value\n            }\n        }\n        catch (e) {\n            throw new Error(\"cannot coerce value into type \" + type)\n        }\n        return result\n    }\n}\n\nmodule.exports = ASTQUtil\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\nlet ASTQQueryExec = require(\"./astq-query-exec.js\")\n\nlet ASTQQuery = class ASTQQuery {\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n    dump () {\n        return this.ast.dump()\n    }\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\nmodule.exports = ASTQQuery\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util = require(\"./astq-util.js\")\n\nlet ASTQQueryTrace = class ASTQQueryTrace {\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\nmodule.exports = ASTQQueryTrace\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapter       = require(\"./astq-adapter.js\")\nlet ASTQAdapterASTY   = require(\"./astq-adapter-asty.js\")\nlet ASTQAdapterMOZAST = require(\"./astq-adapter-xmldom.js\")\nlet ASTQAdapterXMLDOM = require(\"./astq-adapter-xmldom.js\")\nlet ASTQFuncs         = require(\"./astq-funcs.js\")\nlet ASTQFuncsSTD      = require(\"./astq-funcs-std.js\")\nlet ASTQCache         = require(\"./astq-cache.js\")\nlet ASTQQuery         = require(\"./astq-query.js\")\n\nlet ASTQ = class ASTQ {\n    constructor () {\n        if (!(this instanceof ASTQ))\n            return new ASTQ()\n        this._adapter = new ASTQAdapter()\n        this._funcs   = new ASTQFuncs()\n        this._cache   = new ASTQCache()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n    }\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\nmodule.exports = ASTQ\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\nmodule.exports = ASTQFuncs\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});"]}