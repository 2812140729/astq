{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-adapter.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-query.js","src/astq-util.js","src/astq-version.js","src/astq.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js","node_modules/cache-lru/lib/cache-lru.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","ASTQAdapterMozAST","loc","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","ASTQAdapter","_adapters","register","adapter","unshift","unregister","adapters","i","length","select","stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","first","last","count","val","Object","keys","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","_funcs","name","func","run","args","apply","util","_interopRequire","require","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","_parent6","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","replace","ASTY","PEGUtil","ASTQQueryParse","ctor","SyntaxError","message","expected","found","offset","line","column","parse","input","options","arguments","peg$FAILED","query","peg$parsequery","peg$startRuleFunction","peg$c0","peg$c1","qs","peg$c4","value","description","f","l","ast","add","unroll","peg$c13","peg$c14","peg$c15","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","version","major","minor","micro","date","CacheLRU","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","cache","entries","limit","compile","selector","set","execute","root","factory","define","amd","module","exports","global","window","makeAST","__makeAST","makeUnroll","list","j","excerpt","txt","o","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","g","self","t","r","s","u","a","code",1,"_dereq_","_prototypeProperties","child","staticProps","instanceProps","defineProperties","_classCallCheck","instance","Constructor","TypeError","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","key","_add","JSON","stringify","arg","del","splice",2,"ASTYDump","dump","maxDepth","Infinity","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,5,"ASTYWalk","cb","when","_walk",6,"obj","__esModule","ASTYVersion","ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-version.js","./asty-walk.js","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","dispose","each","values","has","peek","expires","Date","now","touch","_promote","_attach","_detach","clear"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterASTY {\n    static taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    }\n    static getParentNode (node) {\n        return node.parent()\n    }\n    static getChildNodes (node) {\n        return node.childs()\n    }\n    static getNodeType (node) {\n        return node.type()\n    }\n    static getNodeAttrNames (node) {\n        return node.attrs()\n    }\n    static getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nexport default class ASTQAdapterMozAST {\n    static taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    }\n    static getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    }\n    static getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    }\n    static getNodeType (node) {\n        return node.type\n    }\n    static getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    }\n    static getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterXMLDOM {\n    static taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    }\n    static getParentNode (node) {\n        return node.parentNode\n    }\n    static getChildNodes (node) {\n        return node.childNodes\n    }\n    static getNodeType (node) {\n        return node.nodeName\n    }\n    static getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    }\n    static getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary(Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical(Q, T)\n            case \"Bitwise\":            return this.execExprBitwise(Q, T)\n            case \"Relational\":         return this.execExprRelational(Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical(Q, T)\n            case \"Unary\":              return this.execExprUnary(Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall(Q, T)\n            case \"Attribute\":          return this.execExprAttribute(Q, T)\n            case \"Param\":              return this.execExprParam(Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString(Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp(Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber(Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue(Q, T)\n            case \"Path\":               return this.execExprPath(Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        /* jscs: disable */\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        /* jscs: enable */\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                        \"----------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +---------------------------------------\" +\n                        \"-----------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 8: false */\n/* global 20150302:  false */\n\nlet version = {\n    major: 1,\n    minor: 2,\n    micro: 8,\n    date:  20150302\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ASTY = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {\n        _classCallCheck(this, ASTYBase);\n    }\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n\n            value: function type(T) {\n                if (arguments.length === 0) {\n                    return this.T;\n                } else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) {\n                    return this.L;\n                } else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n\n            value: function set() {\n                var _this = this;\n\n                var _arguments = arguments;\n\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n\n            value: function add() {\n                var _this = this;\n\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n\n            value: function del() {\n                var _this = this;\n\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {\n        _classCallCheck(this, ASTYDump);\n    }\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {\n        _classCallCheck(this, ASTYMerge);\n    }\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 0: false */\n/* global 8: false */\n/* global 20150301:  false */\n\nvar version = {\n    major: 1,\n    minor: 0,\n    micro: 8,\n    date: 20150301\n};\n\nmodule.exports = version;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {\n        _classCallCheck(this, ASTYWalk);\n    }\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _interopRequire(_dereq_(\"./asty-base.js\"));\n\nvar ASTYMerge = _interopRequire(_dereq_(\"./asty-merge.js\"));\n\nvar ASTYWalk = _interopRequire(_dereq_(\"./asty-walk.js\"));\n\nvar ASTYDump = _interopRequire(_dereq_(\"./asty-dump.js\"));\n\nvar ASTYVersion = _interopRequire(_dereq_(\"./asty-version.js\"));\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n\n        _classCallCheck(this, ASTYCtx);\n\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        version: {\n            value: function version() {\n                return ASTYVersion;\n            },\n            writable: true,\n            configurable: true\n        },\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-version.js\":4,\"./asty-walk.js\":5}]},{},[1,2,3,4,5,6])(6)\n});","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CacheLRU=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";var _prototypeProperties=function(e,t,i){t&&Object.defineProperties(e,t),i&&Object.defineProperties(e.prototype,i)},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _prototypeProperties(e,null,{limit:{value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t},writable:!0,configurable:!0},dispose:{value:function(e){return this._dispose=e,this},writable:!0,configurable:!0},length:{value:function(){return this._cur},writable:!0,configurable:!0},keys:{value:function(){return this.each(function(e,t){this.push(t)},[])},writable:!0,configurable:!0},values:{value:function(){return this.each(function(e){this.push(e)},[])},writable:!0,configurable:!0},each:{value:function(e,t){arguments<2&&(t=this);for(var i=0,r=this._MRU.older;r!==this._LRU;)e.call(t,r.val,r.key,i++),r=r.older;return t},writable:!0,configurable:!0},has:{value:function(e){var t=this._index[e];return void 0!==t},writable:!0,configurable:!0},peek:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):t.val},writable:!0,configurable:!0},touch:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this},writable:!0,configurable:!0},get:{value:function(e){var t=this._index[e];return void 0===t?void 0:t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)},writable:!0,configurable:!0},set:{value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var r=this._index[e];if(void 0===r)r={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=r,this._attach(r),this._cur++,this._purge();else{var n=r.val;r.val=t,this._promote(r),this._dispose.call(void 0,r.key,n,\"set\")}return this},writable:!0,configurable:!0},del:{value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this},writable:!0,configurable:!0},clear:{value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this},writable:!0,configurable:!0},_purge:{value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)},writable:!0,configurable:!0},_promote:{value:function(e){this._detach(e),this._attach(e)},writable:!0,configurable:!0},_detach:{value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null},writable:!0,configurable:!0},_attach:{value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e},writable:!0,configurable:!0}}),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map"]}