{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-cache.js","src/astq-funcs.js","src/astq-adapter.js","src/astq-query.js","src/astq-query-exec.js","src/astq-util.js","src/astq-funcs-std.js","src/astq-version.js","src/astq-query-trace.js","src/astq.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapterASTY","taste","node","ASTy","getParentNode","parent","getChildNodes","childs","getNodeType","type","getNodeAttrNames","attrs","getNodeAttrValue","attr","get","module","exports","ASTQAdapterMozAST","loc","Error","field","hasOwnProperty","this","push","Array","forEach","_this","names","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","length","_purge","dispose","cb","keys","each","val","key","values","ctx","i","bucket","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear","ASTQFuncs","_funcs","register","name","func","run","args","apply","ASTQAdapter","_adapters","adapter","unshift","unregister","adapters","select","ASTY","require","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","expected","found","offset","line","column","message","parse","input","options","peg$FAILED","peg$c0","peg$c7","peg$c8","a","m","f","ast","add","peg$c15","value","description","peg$c17","util","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","T","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","pchilds","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","ASTQUtil","pad","str","num","substr","join","isNaN","Boolean","Number","String","RegExp","e","stdfuncs","A","depth","pos","nth","parseInt","first","last","count","Object","len","lc","toLowerCase","uc","toUpperCase","major","minor","micro","date","prefixOf","prefix1","prefix2","_prefixOf","console","log","replace","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","version","cache","entries","compile","selector","query","execute","root","factory","define","amd","global","window","makeAST","__makeAST","makeUnroll","SyntaxError","list","j","excerpt","txt","o","l","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","_add","JSON","stringify","arg","splice",2,"ASTYDump","dump","maxDepth","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nmodule.exports = ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nmodule.exports = ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQCache {\n    /*  create LRU cache instance  */\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n\n    /*  get or set the cache limit  */\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n\n    /*  configure function to be called before item is disposed  */\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n\n    /*  get number of items  */\n    length () {\n        return this._cur\n    }\n\n    /*  get keys of all items in order  */\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n\n    /*  get values of all items in order */\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n\n    /*  iterate over all items in order  */\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n\n    /*  check whether item exists under key  */\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n\n    /*  get value under key without promoting item  */\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n\n    /*  explicity promote item under key  */\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n\n    /*  get value under key  */\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n\n    /*  set value under key  */\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires\n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n\n    /*  delete item under key  */\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n\n    /*  delete all items  */\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n\n    /*  INTERNAL: purge all LRU items above limit  */\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n\n    /*  INTERNAL: promote item  */\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n\n    /*  INTERNAL: detach bucket from list  */\n    _detach (bucket) {\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n\n    /*  INTERNAL: attach bucket to list as MRU bucket  */\n    _attach (bucket) {\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\nmodule.exports = ASTQCache\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\nmodule.exports = ASTQFuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\nmodule.exports = ASTQAdapter\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nlet ASTQQueryExec = require(\"./astq-query-exec.js\")\n\nlet ASTQQuery = class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\nmodule.exports = ASTQQuery\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util          = require(\"./astq-util.js\")\nlet ASTQQueryTrace = require(\"./astq-query-trace.js\")\n\nlet ASTQQueryExec = class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\nmodule.exports = ASTQQueryExec\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    /*  pad a string with spaces to the left/right  */\n    pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    },\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n\n    /*  coerce value to particular type  */\n    coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n\nmodule.exports = ASTQUtil\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nmodule.exports = stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 0: false */\n/* global 20150201:  false */\n\nmodule.exports = {\n    major: 1,\n    minor: 1,\n    micro: 0,\n    date:  20150201\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet util = require(\"./astq-util.js\")\n\nlet ASTQQueryTrace = class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\nmodule.exports = ASTQQueryTrace\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load internal dependencies  */\nlet ASTQAdapter       = require(\"./astq-adapter.js\")\nlet ASTQAdapterASTY   = require(\"./astq-adapter-asty.js\")\nlet ASTQAdapterMOZAST = require(\"./astq-adapter-mozast.js\")\nlet ASTQAdapterXMLDOM = require(\"./astq-adapter-xmldom.js\")\nlet ASTQFuncs         = require(\"./astq-funcs.js\")\nlet ASTQFuncsSTD      = require(\"./astq-funcs-std.js\")\nlet ASTQCache         = require(\"./astq-cache.js\")\nlet ASTQQuery         = require(\"./astq-query.js\")\nlet ASTQVersion       = require(\"./astq-version.js\")\n\n/*  define the API class  */\nlet ASTQ = class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  allow us to be called without \"new\"  */\n        if (!(this instanceof ASTQ))\n            return new ASTQ()\n\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new ASTQCache()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\nmodule.exports = ASTQ\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});"]}