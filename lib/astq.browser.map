{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/astq-adapter-mozast.js","src/astq-adapter-xmldom.js","src/astq-adapter-asty.js","src/astq-adapter.js","src/astq-cache.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-query.js","src/astq-util.js","src/astq-version.js","src/astq.js","node_modules/pegjs-util/PEGUtil.js","node_modules/asty/lib/asty.node.js"],"names":["ASTQAdapterMozAST","taste","node","type","loc","getParentNode","Error","getChildNodes","childs","field","hasOwnProperty","this","push","Array","forEach","_this","getNodeType","getNodeAttrNames","names","getNodeAttrValue","attr","undefined","ASTQAdapterXMLDOM","Node","nodeType","nodeName","parentNode","childNodes","prototype","slice","call","attributes","map","n","getAttribute","ASTQAdapterASTY","ASTy","parent","attrs","get","ASTQAdapter","_adapters","register","adapter","unshift","unregister","adapters","i","length","select","ASTQCache","_index","_oldHead","newer","_newHead","older","_cur","_max","Infinity","_dispose","limit","max","maxOld","arguments","_purge","dispose","cb","keys","each","val","key","values","ctx","bucket","has","peek","expires","Date","now","del","touch","_promote","set","_attach","valOld","_detach","clear","stdfuncs","A","T","depth","pos","pchilds","nth","num","parseInt","first","last","count","Object","String","substr","str","len","lc","toLowerCase","uc","toUpperCase","ASTQFuncs","_funcs","name","func","run","args","apply","util","_interopRequire","require","ASTQQueryTrace","ASTQQueryExec","params","funcs","trace","execQuery","Q","traceBegin","output","concat","execPath","traceEnd","nodes","execStep","axis","match","filter","id","matchAndTake","take","execFilter","op","walk","_parent","leftSibling","_i","_parent2","_i2","_parent3","_i3","_parent4","_i4","_parent5","expr","result","execExpr","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","Math","pow","v","prefixOf","prefix1","pad","prefix2","_prefixOf","console","log","replace","ASTY","PEGUtil","ASTQQueryParse","peg$subclass","child","ctor","constructor","expected","found","offset","line","column","message","parse","input","options","peg$FAILED","peg$c0","peg$c7","peg$c8","a","m","f","ast","add","value","description","ASTQUtil","join","isNaN","Boolean","Number","RegExp","e","version","major","minor","micro","date","ASTQAdapterMOZAST","ASTQFuncsSTD","ASTQQuery","ASTQVersion","ASTQ","_adapter","_name","_cache","cache","entries","compile","selector","query","execute","root","factory","define","amd","module","exports","global","window","makeAST","__makeAST","makeUnroll","SyntaxError","list","j","excerpt","txt","o","l","b","hex","ch","charCodeAt","toString","extract","prolog","token","epilog","parser","error","opts","startRule","definedOrElse","fallback","location","errorMessage","noFinalNewline","msg","self","t","r","s","u","code",1,"_dereq_","_prototypeProperties","staticProps","instanceProps","defineProperties","ASTYBase","init","C","L","O","P","writable","configurable","_arguments","_add","JSON","stringify","arg","splice",2,"ASTYDump","dump","maxDepth","out",3,"ASTYMerge","merge","takePos","attrMap","attrSource","attrTarget",4,"ASTYWalk","when","_walk",5,"ASTYCtx","ASTYNode","mixins","mixin","proto","method","extend","create","isA","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-walk.js"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nlet ASTQAdapterMozAST = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.type === \"string\"\n            && typeof node.loc  === \"object\"\n        )\n    },\n    getParentNode (/* node */) {\n        throw new Error(\"Mozilla SpiderMonkey AST does not support parent node traversal\")\n    },\n    getChildNodes (node) {\n        let childs = []\n        for (let field in node) {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node)\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        return childs\n    },\n    getNodeType (node) {\n        return node.type\n    },\n    getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    },\n    getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\nexport default ASTQAdapterMozAST\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterXMLDOM = {\n    taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    },\n    getParentNode (node) {\n        return node.parentNode\n    },\n    getChildNodes (node) {\n        return node.childNodes\n    },\n    getNodeType (node) {\n        return node.nodeName\n    },\n    getNodeAttrNames (node) {\n        return Array.prototype.slice.call(node.attributes, 0)\n            .map((n) => n.nodeName)\n    },\n    getNodeAttrValue (node, attr) {\n        return node.getAttribute(attr)\n    }\n}\n\nexport default ASTQAdapterXMLDOM\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQAdapterASTY = {\n    taste (node) {\n        return (\n               typeof node      === \"object\"\n            && typeof node.ASTy === \"boolean\"\n        )\n    },\n    getParentNode (node) {\n        return node.parent()\n    },\n    getChildNodes (node) {\n        return node.childs()\n    },\n    getNodeType (node) {\n        return node.type()\n    },\n    getNodeAttrNames (node) {\n        return node.attrs()\n    },\n    getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\nexport default ASTQAdapterASTY\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter) {\n        this._adapters.unshift(adapter)\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i] !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].taste(node))\n                return this._adapters[i]\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQCache {\n    /*  create LRU cache instance  */\n    constructor () {\n        this._index         = {}\n        this._oldHead       = { newer: null }\n        this._newHead       = { older: null }\n        this._oldHead.newer = this._newHead\n        this._newHead.older = this._oldHead\n        this._cur           = 0\n        this._max           = Infinity\n        this._dispose       = (/* key, val, op */) => {}\n        return this\n    }\n\n    /*  get or set the cache limit  */\n    limit (max) {\n        let maxOld = this._max\n        if (arguments.length > 0) {\n            this._max = max\n            this._purge()\n        }\n        return maxOld\n    }\n\n    /*  configure function to be called before item is disposed  */\n    dispose (cb) {\n        this._dispose = cb\n        return this\n    }\n\n    /*  get number of items  */\n    length () {\n        return this._cur\n    }\n\n    /*  get keys of all items in order  */\n    keys () {\n        return this.each(function (val, key) { this.push(key) }, [])\n    }\n\n    /*  get values of all items in order */\n    values () {\n        return this.each(function (val /*, key */) { this.push(val) }, [])\n    }\n\n    /*  iterate over all items in order  */\n    each (cb, ctx) {\n        if (arguments < 2)\n            ctx = this\n        let i = 0\n        let bucket = this._newHead.older\n        while (bucket !== this._oldHead) {\n            cb.call(ctx, bucket.val, bucket.key, i++)\n            bucket = bucket.older\n        }\n        return ctx\n    }\n\n    /*  check whether item exists under key  */\n    has (key) {\n        let bucket = this._index[key]\n        return (bucket !== undefined)\n    }\n\n    /*  get value under key without promoting item  */\n    peek (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            return undefined\n        if (bucket.expires < Date.now()) {\n            this.del(bucket.key)\n            return undefined\n        }\n        return bucket.val\n    }\n\n    /*  explicity promote item under key  */\n    touch (key) {\n        let bucket = this._index[key]\n        if (bucket !== undefined)\n            this._promote(bucket)\n        return this\n    }\n\n    /*  get value under key  */\n    get (key) {\n        let val = this.peek(key)\n        this.touch(key)\n        return val\n    }\n\n    /*  set value under key  */\n    set (key, val, expires) {\n        if (arguments.length < 3)\n            expires = Infinity\n        expires += Date.now()\n        let bucket = this._index[key]\n        if (bucket === undefined) {\n            /*  insert new bucket  */\n            bucket = {\n                older:   null,\n                newer:   null,\n                key:     key,\n                val:     val,\n                expires: expires\n            }\n            this._index[key] = bucket\n            this._attach(bucket)\n            this._cur++\n            this._purge()\n        }\n        else {\n            /*  replace existing bucket  */\n            let valOld = bucket.val\n            bucket.val = val\n            this._promote(bucket)\n            this._dispose(undefined, bucket.key, valOld, \"set\")\n        }\n        return this\n    }\n\n    /*  delete item under key  */\n    del (key) {\n        let bucket = this._index[key]\n        if (bucket === undefined)\n            throw new Error(\"ASTQ::Cache#del: no such item\")\n        delete this._index[key]\n        this._detach(bucket)\n        this._cur--\n        this._dispose(undefined, key, bucket.val, \"del\")\n        return this\n    }\n\n    /*  delete all items  */\n    clear () {\n        while (this._cur > 0)\n            this.del(this._oldHead.newer.key)\n        return this\n    }\n\n    /*  INTERNAL: purge all LRU items above limit  */\n    _purge () {\n        while (this._cur > this._max)\n            this.del(this._oldHead.newer.key)\n    }\n\n    /*  INTERNAL: promote item  */\n    _promote (bucket) {\n        /*  promote bucket to be MRU bucket  */\n        this._detach(bucket)\n        this._attach(bucket)\n    }\n\n    /*  INTERNAL: detach bucket from list  */\n    _detach (bucket) {\n        bucket.older.newer = bucket.newer\n        bucket.newer.older = bucket.older\n        bucket.older       = null\n        bucket.newer       = null\n    }\n\n    /*  INTERNAL: attach bucket to list as MRU bucket  */\n    _attach (bucket) {\n        bucket.older       = this._newHead.older\n        bucket.newer       = this._newHead\n        bucket.newer.older = bucket\n        bucket.older.newer = bucket\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node)) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        let parent = A.getParentNode(T)\n        if (parent === null)\n            return 1\n        let pchilds = A.getChildNodes(parent)\n        for (let i = 0; i < pchilds.length; i++)\n            if (pchilds[i] === T)\n                return (i + 1)\n        throw new Error(\"cannot find myself\")\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T)\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent)\n            if (num < 0)\n                num = pchilds - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n        })\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        matchAndTake(pchilds[i])\n                    }\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length) {\n                        i++\n                        while (i < pchilds.length)\n                            matchAndTake(pchilds[i++])\n                    }\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                while (true) {\n                    let parent = this.adapter.getParentNode(node)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary (Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical           (Q, T)\n            case \"Bitwise\":            return this.execExprBitwise           (Q, T)\n            case \"Relational\":         return this.execExprRelational        (Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical      (Q, T)\n            case \"Unary\":              return this.execExprUnary             (Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall          (Q, T)\n            case \"Attribute\":          return this.execExprAttribute         (Q, T)\n            case \"Param\":              return this.execExprParam             (Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString     (Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp     (Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber     (Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue      (Q, T)\n            case \"Path\":               return this.execExprPath              (Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node)) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n\n/*  load external dependencies  */\nlet ASTY     = require(\"asty\")\nlet PEG      = require(\"pegjs-otf\")\nlet PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nlet ASTQQueryParse = PEG.buildParserFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +-------------------------------------------------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +--------------------------------------------------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet ASTQUtil = {\n    /*  pad a string with spaces to the left/right  */\n    pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    },\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    },\n\n    /*  coerce value to particular type  */\n    coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        value = Boolean(value)\n                        break\n                    case \"number\":\n                        value = Number(value)\n                        break\n                    case \"string\":\n                        value = String(value)\n                        break\n                    case \"regexp\":\n                        value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n\nexport default ASTQUtil\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 0: false */\n/* global 20150201:  false */\n\nlet version = {\n    major: 1,\n    minor: 1,\n    micro: 0,\n    date:  20150201\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQCache         from \"./astq-cache.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nexport default class ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n        this._adapter.register(ASTQAdapterMOZAST)\n        this._adapter.register(ASTQAdapterXMLDOM)\n        this._adapter.register(ASTQAdapterASTY)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new ASTQCache()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a custom adapter  */\n    adapter (adapter) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        this._adapter.register(adapter)\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (line, column, offset, options) {\n        return function () {\n            return options.util.__makeAST.call(null, line(), column(), offset(), arguments);\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (line, column, offset, SyntaxError) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", offset(), line(), column());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (line, column, offset, args) {\n                    return { line: line, column: column, offset: offset, args: args };\n                };\n            }\n            var opts = {\n                util: {\n                    makeUnroll: PEGUtil.makeUnroll,\n                    makeAST:    PEGUtil.makeAST,\n                    __makeAST:  makeAST\n                }\n            };\n            if (typeof options.startRule === \"string\")\n                opts.startRule = options.startRule;\n            result.ast = parser.parse(txt, opts);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            var definedOrElse = function (value, fallback) {\n                return (typeof value !== \"undefined\" ? value : fallback);\n            };\n            result.error = {\n                line:     definedOrElse(e.line, 0),\n                column:   definedOrElse(e.column, 0),\n                message:  e.message,\n                found:    definedOrElse(e.found, \"\"),\n                expected: definedOrElse(e.expected, \"\"),\n                location: excerpt(txt, definedOrElse(e.offset, 0))\n            };\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.ASTY=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = (function () {\n    function ASTYBase() {}\n\n    _prototypeProperties(ASTYBase, null, {\n        init: {\n            /*  AST node initialization  */\n            value: function init(T, A, C) {\n                if (typeof T === \"undefined\") throw new Error(\"init: invalid argument\");\n                this.ASTy = true;\n                this.T = T;\n                this.L = { L: 0, C: 0, O: 0 };\n                this.A = {};\n                this.C = [];\n                this.P = null;\n                if (typeof A === \"object\") {\n                    for (var _name in A) {\n                        if (A.hasOwnProperty(_name)) this.set(_name, A[_name]);\n                    }\n                }\n                if (typeof C === \"object\" && C instanceof Array) this.add(C);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        type: {\n\n            /*  check the type of an AST node  */\n            value: function type(T) {\n                if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                    this.T = T;\n                    return this;\n                } else throw new Error(\"type: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        pos: {\n\n            /*  set the parsing position   */\n            value: function pos(L, C, O) {\n                if (arguments.length === 0) return this.L;else if (arguments.length <= 3) {\n                    this.L.L = L || 0;\n                    this.L.C = C || 0;\n                    this.L.O = O || 0;\n                    return this;\n                } else throw new Error(\"pos: invalid number of arguments\");\n            },\n            writable: true,\n            configurable: true\n        },\n        set: {\n\n            /*  set AST node attributes  */\n            value: function set() {\n                var _this = this;\n                var _arguments = arguments;\n                if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n                    (function () {\n                        var args = _arguments;\n                        Object.keys(args[0]).forEach(function (key) {\n                            _this.A[key] = args[0][key];\n                        });\n                    })();\n                } else if (arguments.length === 2) this.A[arguments[0]] = arguments[1];else throw new Error(\"set: invalid arguments\");\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        get: {\n\n            /*  get AST node attributes  */\n            value: function get(key) {\n                if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n                if (typeof key !== \"string\") throw new Error(\"get: invalid argument\");\n                return this.A[key];\n            },\n            writable: true,\n            configurable: true\n        },\n        attrs: {\n\n            /*  get names of all AST node attributes  */\n            value: function attrs() {\n                return Object.keys(this.A);\n            },\n            writable: true,\n            configurable: true\n        },\n        add: {\n\n            /*  add child AST node(s)  */\n            value: function add() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"add: missing argument(s)\");\n                var _add = function (node, child) {\n                    if (!(typeof child === \"object\" && typeof child.T === \"string\" && typeof child.L === \"object\" && typeof child.A === \"object\" && typeof child.P === \"object\" && (typeof child.C === \"object\" && child.C instanceof Array))) throw new Error(\"add: invalid AST node: \" + JSON.stringify(child));\n                    node.C.push(child);\n                    child.P = node;\n                };\n                if (arguments !== null) {\n                    Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                        if (typeof arg === \"object\" && arg instanceof Array) arg.forEach(function (child) {\n                            _add(_this, child);\n                        });else if (arg !== null) _add(_this, arg);\n                    });\n                }\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        del: {\n\n            /*  delete child AST node(s)  */\n            value: function del() {\n                var _this = this;\n                if (arguments.length === 0) throw new Error(\"del: invalid argument\");\n                Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                    var found = false;\n                    for (var j = 0; j < _this.C.length; j++) {\n                        if (_this.C[j] === arg) {\n                            _this.C.splice(j, 1);\n                            arg.P = null;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) throw new Error(\"del: child not found\");\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        childs: {\n\n            /*  get child AST nodes  */\n            value: function childs() {\n                return this.C;\n            },\n            writable: true,\n            configurable: true\n        },\n        parent: {\n\n            /*  get parent AST node  */\n            value: function parent() {\n                return this.P;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYBase;\n})();\n\nmodule.exports = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = (function () {\n    function ASTYDump() {}\n\n    _prototypeProperties(ASTYDump, null, {\n        dump: {\n            /*  dump the AST recursively  */\n            value: function dump(maxDepth) {\n                if (maxDepth === undefined) maxDepth = Infinity;\n                var out = \"\";\n                this.walk(function (node, depth /*, parent, when */) {\n                    if (depth > maxDepth) return;\n                    for (var i = 0; i < depth; i++) {\n                        out += \"    \";\n                    }out += node.T + \" \";\n                    var keys = Object.keys(node.A);\n                    if (keys.length > 0) {\n                        (function () {\n                            out += \"(\";\n                            var first = true;\n                            keys.forEach(function (key) {\n                                if (!first) out += \", \";else first = false;\n                                out += key + \": \";\n                                var value = node.A[key];\n                                switch (typeof value) {\n                                    case \"string\":\n                                        out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += \"/\" + value.toString().replace(/^\\//, \"\").replace(/\\/$/, \"\").replace(/\\//g, \"\\\\/\") + \"/\";else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            });\n                            out += \") \";\n                        })();\n                    }\n                    out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n                }, \"downward\");\n                return out;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYDump;\n})();\n\nmodule.exports = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = (function () {\n    function ASTYMerge() {}\n\n    _prototypeProperties(ASTYMerge, null, {\n        merge: {\n            /*  merge attributes and childs of an AST node  */\n            value: function merge(node, takePos, attrMap) {\n                var _this = this;\n                if (typeof node !== \"object\") throw new Error(\"merge: invalid AST node argument\");\n                if (typeof takePos === \"undefined\") takePos = false;\n                if (typeof attrMap === \"undefined\") attrMap = {};\n                if (takePos) {\n                    var pos = node.pos();\n                    this.pos(pos.L, pos.C, pos.O);\n                }\n                node.attrs().forEach(function (attrSource) {\n                    var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                    if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n                });\n                node.childs().forEach(function (child) {\n                    _this.add(child);\n                });\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYMerge;\n})();\n\nmodule.exports = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = (function () {\n    function ASTYWalk() {}\n\n    _prototypeProperties(ASTYWalk, null, {\n        walk: {\n            /*  walk the AST recursively  */\n            value: function walk(cb, when) {\n                if (typeof when === \"undefined\") when = \"downward\";\n                var _walk = function (node, depth, parent) {\n                    if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                    node.C.forEach(function (child) {\n                        _walk(child, depth + 1, node);\n                    });\n                    if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n                };\n                _walk(this, 0, null);\n                return this;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYWalk;\n})();\n\nmodule.exports = ASTYWalk;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = _dereq_(\"./asty-base.js\");\nvar ASTYMerge = _dereq_(\"./asty-merge.js\");\nvar ASTYWalk = _dereq_(\"./asty-walk.js\");\nvar ASTYDump = _dereq_(\"./asty-dump.js\");\n\nvar ASTYCtx = (function () {\n    function ASTYCtx() {\n        var _this = this;\n        if (!(this instanceof ASTYCtx)) return new ASTYCtx();\n        this.ASTYNode = function () {};\n        var mixins = [[ASTYBase, \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\"], [ASTYMerge, \"merge\"], [ASTYWalk, \"walk\"], [ASTYDump, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _prototypeProperties(ASTYCtx, null, {\n        extend: {\n            value: function extend(mixin) {\n                for (var method in mixin) {\n                    if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n                }return this;\n            },\n            writable: true,\n            configurable: true\n        },\n        create: {\n            value: function create(type) {\n                return new this.ASTYNode().init(type);\n            },\n            writable: true,\n            configurable: true\n        },\n        isA: {\n            value: function isA(node) {\n                return typeof node === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n            },\n            writable: true,\n            configurable: true\n        }\n    });\n\n    return ASTYCtx;\n})();\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-walk.js\":4}]},{},[1,2,3,4,5])(5)\n});"]}